<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="twoplates_8cpp" kind="file">
    <compoundname>twoplates.cpp</compoundname>
    <includes refid="twoplates_8h" local="yes">twoplates.h</includes>
    <includes local="no">vtkPoints.h</includes>
    <includes local="no">vtkUnstructuredGrid.h</includes>
    <includes local="no">vtkCell.h</includes>
    <incdepgraph>
      <node id="844">
        <label>LMX/lmx_nlsolvers.h</label>
      </node>
      <node id="846">
        <label>element.h</label>
        <link refid="element_8h"/>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="848">
        <label>vtkPoints.h</label>
      </node>
      <node id="845">
        <label>particle.h</label>
        <link refid="particle_8h"/>
        <childnode refid="839" relation="include">
        </childnode>
      </node>
      <node id="842">
        <label>cmath</label>
      </node>
      <node id="841">
        <label>map</label>
      </node>
      <node id="850">
        <label>vtkCell.h</label>
      </node>
      <node id="849">
        <label>vtkUnstructuredGrid.h</label>
      </node>
      <node id="840">
        <label>vector</label>
      </node>
      <node id="847">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="839" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>src/twoplates.cpp</label>
        <link refid="twoplates.cpp"/>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="843">
        <label>LMX/lmx.h</label>
      </node>
      <node id="839">
        <label>iostream</label>
      </node>
      <node id="838">
        <label>geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="837">
        <label>twoplates.h</label>
        <link refid="twoplates_8h"/>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>/***************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2007<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>daniel.iglesias@ciemat.es<sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;<ref refid="twoplates_8h" kindref="compound">twoplates.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;vtkPoints.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;vtkUnstructuredGrid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;vtkCell.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classTwoPlates_1a66e45a6d02f3b6026f8dd99ff5d4653e" refkind="member"><highlight class="normal"><sp/><ref refid="classTwoPlates_1a66e45a6d02f3b6026f8dd99ff5d4653e" kindref="member">TwoPlates::TwoPlates</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classGeometry" kindref="compound">Geometry</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classTwoPlates_1ac1dfa39d5a74aad3e53b12c4bbdcff4e" refkind="member"><highlight class="normal"><sp/><ref refid="classTwoPlates_1a66e45a6d02f3b6026f8dd99ff5d4653e" kindref="member">TwoPlates::TwoPlates</ref>(std::string<sp/>type_in,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par1_in,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par2_in,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>par3_in,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width_in,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orientation_in</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>:<sp/><ref refid="classGeometry" kindref="compound">Geometry</ref>(type_in,<sp/>0.0,<sp/>par3_in,<sp/>par1_in)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>initSep(par2_in)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>width(width_in)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>orientation(orientation_in)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>slope<sp/>=<sp/>atan2(<sp/>initSep/2,<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Slope<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>slope<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classTwoPlates_1af74b10840a05812ceb5aa94ceb7a76f6" refkind="member"><highlight class="normal"><sp/><ref refid="classTwoPlates_1af74b10840a05812ceb5aa94ceb7a76f6" kindref="member">TwoPlates::~TwoPlates</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classTwoPlates_1a68c5911a0b3c24f59c3df0335f1e6c94" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a68c5911a0b3c24f59c3df0335f1e6c94" kindref="member">TwoPlates::computeEnergy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>section,<sp/>std::vector&lt;<sp/>Particle*<sp/>&gt;<sp/>&amp;<sp/>particles)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>initSep<sp/>*<sp/>(<ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/>section)<sp/>/<sp/>(<sp/>2.<sp/>*<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>leftX,<sp/>rightX,<sp/>y_max,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>Particle*<sp/>&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Height<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>height<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>energies[section].push_back(0.);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>energies[section].push_back(0.);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>powers[section].push_back(0.);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>powers[section].push_back(0.);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>leftX<sp/>=<sp/><sp/>i<sp/><sp/><sp/><sp/><sp/>*<sp/>width<sp/>/<sp/>sectors<sp/>-<sp/>width/2;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rightX<sp/>=<sp/>(i+1)<sp/>*<sp/>width<sp/>/<sp/>sectors<sp/>-<sp/>width/2;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it<sp/>=<sp/>particles.begin();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it!=<sp/>particles.end();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(*it)-&gt;getX();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(*it)-&gt;getY();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>y<sp/>&gt;<sp/>y_max)<sp/>y_max<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>y<sp/>&lt;<sp/>height<sp/>&amp;&amp;<sp/>y<sp/>&gt;=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>&gt;=<sp/>leftX<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>rightX<sp/>){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energies[section][2*i]<sp/>+=<sp/>(*it)-&gt;getEnergy();<sp/></highlight><highlight class="comment">//<sp/>total<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++sectParts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;energy<sp/>in<sp/>section<sp/>&quot;<sp/>&lt;&lt;<sp/>section<sp/>&lt;&lt;<sp/>&quot;,<sp/>sector<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>y<sp/>&gt;<sp/>-height<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>&gt;=<sp/>leftX<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>rightX<sp/>){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energies[section][2*i+1]<sp/>+=<sp/>(*it)-&gt;getEnergy();<sp/></highlight><highlight class="comment">//<sp/>total<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++sectParts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;energy<sp/>in<sp/>section<sp/>&quot;<sp/>&lt;&lt;<sp/>section<sp/>&lt;&lt;<sp/>&quot;,<sp/>sector<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>powers[section][2*i]<sp/>+=<sp/>(<sp/>energies[section][2*i]<sp/>*<sp/>0.125<sp/>/<sp/>particles.size()<sp/>)<sp/>*<sp/>1E6;<sp/></highlight><highlight class="comment">//<sp/>[Watts]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>powers[section][2*i+1]<sp/>+=<sp/>(<sp/>energies[section][2*i+1]<sp/>*<sp/>0.125<sp/>/<sp/>particles.size()<sp/>)<sp/>*<sp/>1E6;<sp/></highlight><highlight class="comment">//<sp/>[Watts]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Particle_max_height<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>y_max<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1a0efc4bf9252077abca96c1c198eefa33" kindref="member">sections</ref><sp/>=<sp/>energies.size()<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>add<sp/>the<sp/>first<sp/>section<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Energies<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>energies[section].size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sectors<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sectors<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sectors<sp/>*=<sp/>2;<sp/>//<sp/>for<sp/>Geometry<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classTwoPlates_1a23168c87f9097b2c1a4fa8cac4b61049" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a23168c87f9097b2c1a4fa8cac4b61049" kindref="member">TwoPlates::setSections</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1a0efc4bf9252077abca96c1c198eefa33" kindref="member">sections</ref><sp/>=<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>/distance<sp/>+<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sections<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classGeometry_1a0efc4bf9252077abca96c1c198eefa33" kindref="member">sections</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classTwoPlates_1a890d6b6ec49ff021d5d34bf1c2a83099" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a890d6b6ec49ff021d5d34bf1c2a83099" kindref="member">TwoPlates::computeGeometry</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sectors<sp/>/=<sp/>2;<sp/>//<sp/>for<sp/>Geometry<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ra,<sp/>rb;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>c;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>z;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sectionDif<sp/>=<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>/<sp/>(<ref refid="classGeometry_1a0efc4bf9252077abca96c1c198eefa33" kindref="member">sections</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="classGeometry_1a0efc4bf9252077abca96c1c198eefa33" kindref="member">sections</ref>-1;<sp/>++i){<sp/></highlight><highlight class="comment">//<sp/>last<sp/>section<sp/>is<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>i<sp/>*<sp/>sectionDif;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>initSep<sp/>*<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/>z<sp/>)<sp/>/<sp/>(2.<sp/>*<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;=<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++j){<sp/></highlight><highlight class="comment">//open<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>j<sp/>*<sp/>width<sp/>/<sp/><ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref><sp/>-<sp/>width/2;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[2*i*(<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>+1)<sp/>+<sp/>2*j]<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNode" kindref="compound">Node</ref>(<sp/>x,<sp/><sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[2*i*(<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>+1)<sp/>+<sp/>2*j+1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNode" kindref="compound">Node</ref>(<sp/>x,<sp/>-y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>sections-1;<sp/></highlight><highlight class="comment">//<sp/>last<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>z<sp/>=<sp/>i<sp/>*<sp/>sectionDif;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>y<sp/>=<sp/>initSep<sp/>*<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/>z<sp/>)<sp/>/<sp/>(2.<sp/>*<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;=<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++j){<sp/></highlight><highlight class="comment">//open<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>j<sp/>*<sp/>width<sp/>/<sp/><ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref><sp/>-<sp/>width/2;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[2*i*(<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>+1)<sp/>+<sp/>2*j]<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNode" kindref="compound">Node</ref>(<sp/>x,<sp/><sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[2*i*(<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>+1)<sp/>+<sp/>2*j+1]<sp/>=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[2*i*(<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>+1)<sp/>+<sp/>2*j];<sp/></highlight><highlight class="comment">//instead<sp/>of<sp/>creating<sp/>new<sp/>nodes,<sp/>we<sp/>assign<sp/>the<sp/>vertex<sp/>nodes<sp/>(y=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;sections-1;<sp/>++i){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>i<sp/>*<sp/>sectionDif;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ra<sp/>=<sp/>initSep<sp/>*<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/>z<sp/>)<sp/>/<sp/>(2.<sp/>*<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rb<sp/>=<sp/>initSep<sp/>*<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/>(z<sp/>+<sp/>sectionDif)<sp/>)<sp/>/<sp/>(2.<sp/>*<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>width<sp/>/<sp/><ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>sqrt(<sp/>pow(ra-rb,<sp/>2)<sp/>+<sp/>pow(sectionDif,<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++j){</highlight><highlight class="comment">//last<sp/>sector<sp/>is<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classElement" kindref="compound">Element</ref>(<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>type<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;setNumber(<sp/>2*i*sectors<sp/>+<sp/>2*j<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*i*(sectors+1)<sp/>+<sp/>2*j<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*i*(sectors+1)<sp/>+<sp/>2*(j+1)<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*(i+1)*(sectors+1)<sp/>+<sp/>2*(j+1)<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*(i+1)*(sectors+1)<sp/>+<sp/>2*j<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;generateGeometry();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;setArea(<sp/>a<sp/>*<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classElement" kindref="compound">Element</ref>(<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>type<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;setNumber(<sp/>2*i*sectors<sp/>+<sp/>2*j+1<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*i*(sectors+1)<sp/>+<sp/>2*j+1<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*i*(sectors+1)<sp/>+<sp/>2*(j+1)+1<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*(i+1)*(sectors+1)<sp/>+<sp/>2*(j+1)+1<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;addNode(<sp/>2*(i+1)*(sectors+1)<sp/>+<sp/>2*j+1<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;generateGeometry();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.back()-&gt;setArea(<sp/>a<sp/>*<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;a<sp/>=<sp/>&quot;&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/>&quot;,<sp/>c<sp/>=<sp/>&quot;&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>&quot;,<sp/>Area<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>elements.back()-&gt;getArea()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;elem<sp/>num:<sp/>&quot;<sp/>&lt;&lt;<sp/>2*i*sectors<sp/>+<sp/>2*j<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;elem<sp/>num:<sp/>&quot;<sp/>&lt;&lt;<sp/>2*i*sectors<sp/>+<sp/>2*j+1<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1aed47a80e867e618e98272e830d297deb" kindref="member">gridPoints</ref><sp/>=<sp/>vtkPoints::New();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1aed47a80e867e618e98272e830d297deb" kindref="member">gridPoints</ref>-&gt;SetNumberOfPoints(<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;int,<sp/>Node*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.begin();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.end();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1aed47a80e867e618e98272e830d297deb" kindref="member">gridPoints</ref>-&gt;InsertPoint(<sp/>it-&gt;first,<sp/>it-&gt;second-&gt;getX(),<sp/>it-&gt;second-&gt;getY(),<sp/>it-&gt;second-&gt;getZ()<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;x<sp/>=<sp/>&quot;&lt;&lt;<sp/>it-&gt;second-&gt;getX()<sp/>&lt;&lt;<sp/>&quot;,<sp/>y<sp/>=<sp/>&quot;&lt;&lt;<sp/>it-&gt;second-&gt;getY()<sp/>&lt;&lt;<sp/>&quot;,<sp/>z<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>it-&gt;second-&gt;getZ()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1aebabda9f0c07ecb986195857913b4ee8" kindref="member">grid</ref><sp/>=<sp/>vtkUnstructuredGrid::New();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1aebabda9f0c07ecb986195857913b4ee8" kindref="member">grid</ref>-&gt;Allocate(1000,1000);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;Element*&gt;::iterator<sp/>it=<ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.begin();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it!=<sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.end();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classGeometry_1aebabda9f0c07ecb986195857913b4ee8" kindref="member">grid</ref>-&gt;InsertNextCell(<sp/>(*it)-&gt;geometry-&gt;GetCellType(),<sp/>(*it)-&gt;geometry-&gt;GetPointIds()<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1aebabda9f0c07ecb986195857913b4ee8" kindref="member">grid</ref>-&gt;SetPoints(<sp/><ref refid="classGeometry_1aed47a80e867e618e98272e830d297deb" kindref="member">gridPoints</ref><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref><sp/>*=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>Geometry<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classTwoPlates_1a71bf9bd3453782adb97e94addabe23ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a71bf9bd3453782adb97e94addabe23ec" kindref="member">TwoPlates::residue</ref><sp/>(<sp/>lmx::Vector&lt;double&gt;&amp;<sp/>res,<sp/>lmx::Vector&lt;double&gt;&amp;<sp/>conf<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>conf.readElement<sp/>(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>res.writeElement<sp/>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>pow<sp/>(<sp/>x+vx*t,2<sp/>)<sp/>+pow<sp/>(<sp/>y+vy*t,2<sp/>)<sp/>)<sp/>*pow<sp/>(<sp/>cos<sp/>(<sp/>slope<sp/>),2<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-pow<sp/>(<sp/>t-<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>+<ref refid="classGeometry_1a755ef6125e306d96ba8b4a01f3593b66" kindref="member">z0</ref><sp/>),2<sp/>)<sp/>*pow<sp/>(<sp/>sin<sp/>(<sp/>slope<sp/>),2<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classTwoPlates_1ad1ae0ed441b0ec1f7650501f648ebfdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1ad1ae0ed441b0ec1f7650501f648ebfdb" kindref="member">TwoPlates::jacobian</ref><sp/>(<sp/>lmx::Matrix&lt;double&gt;&amp;<sp/>jac,<sp/>lmx::Vector&lt;double&gt;&amp;<sp/>conf<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>conf.readElement<sp/>(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>jac.writeElement<sp/>(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>2*vx*<sp/>(<sp/>x+vx*t<sp/>)<sp/>+2*vy*<sp/>(<sp/>y+vy*t<sp/>)<sp/>)<sp/>*pow<sp/>(<sp/>cos<sp/>(<sp/>slope<sp/>),2<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2*<sp/>(<sp/>t-<sp/>(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref>+<ref refid="classGeometry_1a755ef6125e306d96ba8b4a01f3593b66" kindref="member">z0</ref><sp/>)<sp/>)<sp/>*pow<sp/>(<sp/>sin<sp/>(<sp/>slope<sp/>),2<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classTwoPlates_1ac0d504d8b9d2cad3b6facd0cb260d7de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1ac0d504d8b9d2cad3b6facd0cb260d7de" kindref="member">TwoPlates::computeIntersection</ref><sp/>(<sp/><ref refid="classParticle" kindref="compound">Particle</ref>*<sp/>particle<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1abf0b2c3e900576254d9e76255dfaf81d" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1a0fc4232c919f5b1946c2fa74f7a3a9ed" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1a1b287734891b40546e06e17db8589fca" kindref="member">getZ</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1a0813b73b2d08f57f05607df530684e14" kindref="member">getXdiv</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>vy<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1a1898356f0c9ecb8dc5bae09a8dc0e326" kindref="member">getYdiv</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>vz<sp/>=<sp/>particle-&gt;<ref refid="classParticle_1a9435d915d86f9df46203f9b5c72888d0" kindref="member">getZdiv</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>lmx::Vector&lt;double&gt;<sp/>initialGuess<sp/>(<sp/>1<sp/>);<sp/></highlight><highlight class="comment">//<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>lmx::NLSolver&lt;TwoPlates&gt;<sp/>theSolver;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.setInfo<sp/>(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.setInitialConfiguration<sp/>(<sp/>initialGuess<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.setSystem<sp/>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.setResidue<sp/>(<sp/>&amp;<ref refid="classTwoPlates_1a71bf9bd3453782adb97e94addabe23ec" kindref="member">TwoPlates::residue</ref><sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.setJacobian<sp/>(<sp/>&amp;<ref refid="classTwoPlates_1ad1ae0ed441b0ec1f7650501f648ebfdb" kindref="member">TwoPlates::jacobian</ref><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>theSolver.setConvergence(<sp/>&amp;TwoPlates::myConvergence<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>theSolver.setMaxIterations(<sp/>100<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>theSolver.solve<sp/>(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>theSolver.getSolution().readElement(0)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGeometry_1a90ddae3ca87d3c358e2f63611c244be7" kindref="member">paramTrajectories</ref>.push_back<sp/>(<sp/>theSolver.getSolution().readElement<sp/>(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classTwoPlates_1a30eb56de2071f12cb1405057dda35329" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a30eb56de2071f12cb1405057dda35329" kindref="member">TwoPlates::computeNodalPower</ref><sp/>(<sp/><ref refid="classParticle" kindref="compound">Particle</ref>*<sp/>particle<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classTwoPlates_1a8688d978fd1845b370d3fc14d8737e9e" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a8688d978fd1845b370d3fc14d8737e9e" kindref="member">TwoPlates::outputTable</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>std::ofstream<sp/>out1(</highlight><highlight class="stringliteral">&quot;top_table.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>std::ofstream<sp/>out2(</highlight><highlight class="stringliteral">&quot;low_table.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>std::ofstream<sp/>out3(</highlight><highlight class="stringliteral">&quot;top_table.gnu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y=0,<sp/>s=0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>out1&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>out2&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>out3&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;S\tX\tPower<sp/>Density[MW/m^2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;=<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out1&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getX()*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out2&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getX()*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.size();<sp/>++i){</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>y<sp/>!=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getY()<sp/>){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sqrt(<sp/>pow(<sp/><ref refid="classGeometry_1a83cd2f4ce607b1b70227780181b197c6" kindref="member">length</ref><sp/>-<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getZ(),<sp/>2)<sp/>+<sp/>pow(<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getY(),<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getY();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out1<sp/>&lt;&lt;<sp/>y*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out2<sp/>&lt;&lt;<sp/>y*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out3<sp/>&lt;&lt;<sp/>s*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out3<sp/>&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getX()*1E-3<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out3&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getScalar()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out1&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getScalar()*1E6<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out2&lt;&lt;<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[i]-&gt;getScalar()*1E6<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classTwoPlates_1a978c078774fe74e99b8f4064a6126e84" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1a978c078774fe74e99b8f4064a6126e84" kindref="member">TwoPlates::outputPowerFile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>particles)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&gt;::iterator<sp/>it_energies<sp/>=<sp/>energies.begin();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>Element*<sp/>&gt;::iterator<sp/>it_elements<sp/>=<sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.begin();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>connectivity;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sectEnergy,<sp/>totalEnergy=0.;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>std::ofstream<sp/>outFile(</highlight><highlight class="stringliteral">&quot;energy.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it_energies;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_energies<sp/>!=<sp/>energies.end();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_energies</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sectEnergy=0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalEnergy<sp/>+=<sp/>it_energies-&gt;second.operator[](i);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectEnergy<sp/>+=<sp/>it_energies-&gt;second.operator[](i)<sp/>/<sp/>(*it_elements)-&gt;getArea();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_elements;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>outFile<sp/>&lt;&lt;<sp/>it_energies-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sectEnergy<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TOTAL<sp/>ENERGY<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalEnergy<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classTwoPlates_1aec5195987f06df32b1bd1c4c3c0068f9" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTwoPlates_1aec5195987f06df32b1bd1c4c3c0068f9" kindref="member">TwoPlates::outputPowerDensityFile</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;<sp/>double,<sp/>std::vector&lt;double&gt;<sp/>&gt;::iterator<sp/>it_powers<sp/>=<sp/>powers.begin();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>Element*<sp/>&gt;::iterator<sp/>it_elements<sp/>=<sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.begin();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>connectivity;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sectPower,totalPower=0.,<sp/>totalArea=0.;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>std::ofstream<sp/>outFile(</highlight><highlight class="stringliteral">&quot;power.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_powers<sp/>!=<sp/>powers.end()<sp/>){</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it_powers;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_powers<sp/>!=<sp/>powers.end();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_powers</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectPower<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>sectArea<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPower<sp/>+=<sp/>it_powers-&gt;second.operator[](i);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectPower<sp/>+=<sp/>it_powers-&gt;second.operator[](i)<sp/>/<sp/>(*it_elements)-&gt;getArea();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectArea<sp/>+=<sp/>(*it_elements)-&gt;getArea();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_elements;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectPower<sp/>/=<sp/><ref refid="classGeometry_1a5e34644bfae4c1df92cb6bf98a8c62c7" kindref="member">sectors</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile<sp/>&lt;&lt;<sp/>it_powers-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sectPower<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>computed<sp/>by<sp/>theoric<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Element*<sp/>&gt;::iterator<sp/>it_elements<sp/>=<sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.begin();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>connectivity;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Node*&gt;::iterator<sp/>it_nodes<sp/>=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.begin();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it_elements;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_elements<sp/>!=<sp/><ref refid="classGeometry_1acef6e83971679a9c4672c3b610acb58e" kindref="member">elements</ref>.end();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_elements</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectivity<sp/>=<sp/>(*it_elements)-&gt;getConnectivity();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;connectivity.size();<sp/>++j<sp/>){</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPower<sp/>+=<sp/>0.25<sp/>*<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>[<sp/>connectivity[j]<sp/>]-&gt;getScalar()<sp/>*<sp/>(*it_elements)-&gt;getArea();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalArea<sp/>+=<sp/>0.25<sp/>*<sp/>(*it_elements)-&gt;getArea()<sp/>*<sp/>sin(slope);<sp/></highlight><highlight class="comment">//verification<sp/>-&gt;<sp/>Verified!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x<sp/>[m]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getY()/1000.<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;z<sp/>[m]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Power<sp/>[W/m^2]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it_nodes;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes<sp/>!=<sp/><ref refid="classGeometry_1a9f5642ca54e0353b871d733e25ccc56e" kindref="member">nodes</ref>.end();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile<sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getX()/1000.<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getY()/1000.<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getZ()/1000.<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getScalar()*1E6<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes;<sp/></highlight><highlight class="comment">//get<sp/>only<sp/>even<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TOTAL<sp/>PROJECTED<sp/>AREA<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalArea<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TOTAL<sp/>POWER<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalPower<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/twoplates.cpp"/>
  </compounddef>
</doxygen>
