<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="lmx__diff__integrator__am_8h" kind="file">
    <compoundname>lmx_diff_integrator_am.h</compoundname>
    <includes local="no">cmath</includes>
    <includes refid="lmx__diff__integrator__base__implicit_8h" local="yes">lmx_diff_integrator_base_implicit.h</includes>
    <includedby refid="lmx__diff__problem_8h" local="yes">src/LMX/lmx_diff_problem.h</includedby>
    <includedby refid="lmx__diff__problem__double_8h" local="yes">src/LMX/lmx_diff_problem_double.h</includedby>
    <incdepgraph>
      <node id="3632">
        <label>lmx_diff_integrator_base.h</label>
        <link refid="lmx__diff__integrator__base_8h"/>
        <childnode refid="3633" relation="include">
        </childnode>
      </node>
      <node id="3630">
        <label>cmath</label>
      </node>
      <node id="3637">
        <label>stdexcept</label>
      </node>
      <node id="3638">
        <label>string</label>
      </node>
      <node id="3636">
        <label>exception</label>
      </node>
      <node id="3629">
        <label>src/LMX/lmx_diff_integrator_am.h</label>
        <link refid="lmx_diff_integrator_am.h"/>
        <childnode refid="3630" relation="include">
        </childnode>
        <childnode refid="3631" relation="include">
        </childnode>
      </node>
      <node id="3633">
        <label>lmx_diff_configuration.h</label>
        <link refid="lmx__diff__configuration_8h"/>
        <childnode refid="3634" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
      </node>
      <node id="3634">
        <label>lmx_except.h</label>
        <link refid="lmx__except_8h"/>
        <childnode refid="3635" relation="include">
        </childnode>
        <childnode refid="3636" relation="include">
        </childnode>
        <childnode refid="3637" relation="include">
        </childnode>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
      </node>
      <node id="3631">
        <label>lmx_diff_integrator_base_implicit.h</label>
        <link refid="lmx__diff__integrator__base__implicit_8h"/>
        <childnode refid="3632" relation="include">
        </childnode>
      </node>
      <node id="3639">
        <label>sstream</label>
      </node>
      <node id="3635">
        <label>iostream</label>
      </node>
      <node id="3640">
        <label>algorithm</label>
      </node>
      <node id="3641">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3646">
        <label>src/LMX/lmx_diff_problem_double.h</label>
        <link refid="lmx__diff__problem__double_8h"/>
        <childnode refid="3647" relation="include">
        </childnode>
      </node>
      <node id="3645">
        <label>src/LMX/lmx_diff_problem_second.h</label>
        <link refid="lmx__diff__problem__second_8h"/>
      </node>
      <node id="3643">
        <label>src/LMX/lmx_diff_problem.h</label>
        <link refid="lmx__diff__problem_8h"/>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
      </node>
      <node id="3647">
        <label>src/LMX/lmx_diff_problem_first_second.h</label>
        <link refid="lmx__diff__problem__first__second_8h"/>
      </node>
      <node id="3644">
        <label>src/LMX/lmx_diff_problem_first.h</label>
        <link refid="lmx__diff__problem__first_8h"/>
      </node>
      <node id="3642">
        <label>src/LMX/lmx_diff_integrator_am.h</label>
        <link refid="lmx_diff_integrator_am.h"/>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlmx_1_1IntegratorAM" prot="public">lmx::IntegratorAM</innerclass>
    <innernamespace refid="namespacelmx">lmx</innernamespace>
    <briefdescription>
<para>IntegratorAM class implementation. </para>    </briefdescription>
    <detaileddescription>
<para>Implements ADAMS-MOULTON integrator class for solving dynamic systems.</para><para><simplesect kind="author"><para>Daniel Iglesias </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2005<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/lmx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LMXINTEGRATOR_AM_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LMXINTEGRATOR_AM_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include&quot;<ref refid="lmx__diff__integrator__base__implicit_8h" kindref="compound">lmx_diff_integrator_base_implicit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lmx<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlmx_1_1IntegratorAM" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBaseImplicit" kindref="compound">IntegratorBaseImplicit</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>T<sp/>b[5][5];<sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration&lt;T&gt;</ref>*<sp/>q;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classlmx_1_1IntegratorAM_1a7d64ed1e0c88226015aa4caa2ab909b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlmx_1_1IntegratorAM_1a7d64ed1e0c88226015aa4caa2ab909b0" kindref="member">IntegratorAM</ref>(){}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classlmx_1_1IntegratorAM_1a7d64ed1e0c88226015aa4caa2ab909b0" kindref="member">IntegratorAM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ord);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classlmx_1_1IntegratorAM_1a304126a16c4921ae478399aa9db1a6aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlmx_1_1IntegratorAM_1a304126a16c4921ae478399aa9db1a6aa" kindref="member">~IntegratorAM</ref>(){}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a931654fc8a6a5c516d54981f2d3ea8f4" kindref="member">initialize</ref>(<sp/><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration&lt;T&gt;</ref>*<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a9ddeb6b8a0338bcaee3b1a75ef44a579" kindref="member">advance</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a820e76e8e905b0443cea0cce770057c7" kindref="member">integratorUpdate</ref>(<sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref><sp/>delta<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classlmx_1_1IntegratorAM_1a12f749769e2f20545dbedbf744a3a314" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a12f749769e2f20545dbedbf744a3a314" kindref="member">getPartialQdot</ref>(<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(q-&gt;getTimeSize()<sp/>&gt;<sp/>this-&gt;order-1)<sp/>?</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1./<sp/>(<sp/>q-&gt;getLastStepSize()*b[order-1][0]<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1./<sp/>(<sp/>q-&gt;getLastStepSize()*b[q-&gt;getTimeSize()-2][0]<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classlmx_1_1IntegratorAM_1ad29429e37ded23f55bad02ff5a8dc111" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1ad29429e37ded23f55bad02ff5a8dc111" kindref="member">getPartialQddot</ref>(<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(q-&gt;getTimeSize()<sp/>&gt;<sp/>this-&gt;order-1)<sp/>?</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1./<sp/>(<sp/>std::pow(<sp/>q-&gt;getLastStepSize()*b[order-1][0],<sp/>2<sp/>)<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1./<sp/>(<sp/>std::pow(<sp/>q-&gt;getLastStepSize()*b[q-&gt;getTimeSize()-2][0],<sp/>2<sp/>)<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lmx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lmx<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classlmx_1_1IntegratorAM_1a35e0d1746118c153ebb0a7bf273ae547" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="classlmx_1_1IntegratorAM_1a7d64ed1e0c88226015aa4caa2ab909b0" kindref="member">IntegratorAM&lt;T&gt;::IntegratorAM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ord)<sp/>:<sp/>order(ord)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>==<sp/>1<sp/>-&gt;<sp/>Euler<sp/>Implicit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0][0]<sp/>=<sp/>(1.);<sp/></highlight><highlight class="comment">//<sp/>b[0]<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>==<sp/>2<sp/>-&gt;<sp/>Trapezoidal<sp/>rule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1][0]<sp/>=<sp/>(0.5);<sp/></highlight><highlight class="comment">//<sp/>b[0]<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1][1]<sp/>=<sp/>(0.5);<sp/></highlight><highlight class="comment">//<sp/>b[1]<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>==<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2][0]<sp/>=<sp/>(5./12.);<sp/></highlight><highlight class="comment">//<sp/>b[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2][1]<sp/>=<sp/>(8./12.);<sp/></highlight><highlight class="comment">//<sp/>b[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2][2]<sp/>=<sp/>(-1./12.);<sp/></highlight><highlight class="comment">//<sp/>b[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3][0]<sp/>=<sp/>(9./24.);<sp/></highlight><highlight class="comment">//<sp/>b[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3][1]<sp/>=<sp/>(19./24.);<sp/></highlight><highlight class="comment">//<sp/>b[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3][2]<sp/>=<sp/>(-5./24.);<sp/></highlight><highlight class="comment">//<sp/>b[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3][3]<sp/>=<sp/>(1./24.);<sp/></highlight><highlight class="comment">//<sp/>b[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>==<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[4][0]<sp/>=<sp/>(251./720.);<sp/></highlight><highlight class="comment">//<sp/>b[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[4][1]<sp/>=<sp/>(646./720.);<sp/></highlight><highlight class="comment">//<sp/>b[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[4][2]<sp/>=<sp/>(-264./720.);<sp/></highlight><highlight class="comment">//<sp/>b[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[4][3]<sp/>=<sp/>(106./720.);<sp/></highlight><highlight class="comment">//<sp/>b[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[4][4]<sp/>=<sp/>(-19./720.);<sp/></highlight><highlight class="comment">//<sp/>b[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="126" refid="classlmx_1_1IntegratorAM_1a931654fc8a6a5c516d54981f2d3ea8f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a931654fc8a6a5c516d54981f2d3ea8f4" kindref="member">IntegratorAM&lt;T&gt;::initialize</ref>(<sp/><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration&lt;T&gt;</ref>*<sp/>configuration_in<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>max</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>configuration_in;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>q-&gt;<ref refid="classlmx_1_1Configuration_1a9a253bca9639d1c4f8500fd76e694862" kindref="member">setStoredSteps</ref>(<sp/>2,<sp/>std::max(order,2),<sp/>order<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="136" refid="classlmx_1_1IntegratorAM_1a9ddeb6b8a0338bcaee3b1a75ef44a579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a9ddeb6b8a0338bcaee3b1a75ef44a579" kindref="member">IntegratorAM&lt;T&gt;::advance</ref>(<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q-&gt;getTimeSize()<sp/>&lt;<sp/>order</highlight><highlight class="comment">/*+1*/</highlight><highlight class="normal">){<sp/></highlight><highlight class="comment">//orden<sp/>de<sp/>integrador-1<sp/>&gt;<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>q-&gt;getDiffOrder();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>f{n}<sp/>=<sp/>(q{n}<sp/>-<sp/>q{n-1})<sp/>/<sp/>(<sp/>h*b_0<sp/>)<sp/>+<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1,(<sp/>q-&gt;getConf(i,0)<sp/>-<sp/>q-&gt;getConf(i,1)<sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/<sp/>(q-&gt;getLastStepSize()<sp/>*<sp/>b[q-&gt;getTimeSize()-2][0]))<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j=1;<sp/>j<sp/>&lt;<sp/>q-&gt;getTimeSize()-1;<sp/>++j){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>-<sp/>b_i/b_0<sp/>*<sp/>f{n-i}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1,<sp/>q-&gt;getConf(i+1,0)<sp/>-<sp/>(<sp/>b[q-&gt;getTimeSize()-2][j]*<sp/>q-&gt;getConf(i+1,j)<sp/><sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/<sp/>(<sp/>b[q-&gt;getTimeSize()-2][0]))<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//se<sp/>aplica<sp/>el<sp/>orden<sp/>real<sp/>de<sp/>integrador</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>q-&gt;getDiffOrder();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>f{n}<sp/>=<sp/>(q{n}<sp/>-<sp/>q{n-1})<sp/>/<sp/>(<sp/>h*b_0<sp/>)<sp/>+<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1,(<sp/>q-&gt;getConf(i,0)<sp/>-<sp/>q-&gt;getConf(i,1)<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/<sp/>(q-&gt;getLastStepSize()<sp/>*<sp/>b[order-1][0]))<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j=1;<sp/>j<sp/>&lt;<sp/>order;<sp/>++j){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>-<sp/>b_i/b_0<sp/>*<sp/>f{n-i}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1,<sp/>q-&gt;getConf(i+1,0)<sp/>-<sp/>(<sp/>b[order-1][j]*<sp/>q-&gt;getConf(i+1,j)<sp/><sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/<sp/>(<sp/>b[order-1][0]))<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="166" refid="classlmx_1_1IntegratorAM_1a820e76e8e905b0443cea0cce770057c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM_1a820e76e8e905b0443cea0cce770057c7" kindref="member">IntegratorAM&lt;T&gt;::integratorUpdate</ref>(<sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref><sp/>delta<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q-&gt;getTimeSize()<sp/>&lt;<sp/>order</highlight><highlight class="comment">/*+1*/</highlight><highlight class="normal">){<sp/></highlight><highlight class="comment">//orden<sp/>de<sp/>integrador-1<sp/>&gt;<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>q-&gt;getDiffOrder();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1<sp/>)<sp/>+=<sp/>delta</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(q-&gt;getLastStepSize()<sp/>*<sp/>b[q-&gt;getTimeSize()-2][0],<sp/>i+1)<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>q-&gt;getDiffOrder();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>i+1<sp/>)<sp/>+=<sp/>delta</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>1.<sp/>/</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(q-&gt;getLastStepSize()<sp/>*<sp/>b[order-1][0],<sp/>i+1)<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>q-&gt;setConf(<sp/>0,<sp/>q-&gt;getConf(0,<sp/>0)<sp/>+<sp/>delta<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lmx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_integrator_am.h"/>
  </compounddef>
</doxygen>
