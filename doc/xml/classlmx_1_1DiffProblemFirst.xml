<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classlmx_1_1DiffProblemFirst" kind="class" prot="public">
    <compoundname>lmx::DiffProblemFirst</compoundname>
    <basecompoundref refid="classlmx_1_1DiffProblem" prot="public" virt="non-virtual">lmx::DiffProblem&lt; Sys, T &gt;</basecompoundref>
    <includes refid="lmx__diff__problem__first_8h" local="no">/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h</includes>
    <templateparamlist>
      <param>
        <type>typename Sys</type>
      </param>
      <param>
        <type>typename T</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a8d8a73819c76dcfd52042522dc55dbd4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lmx::DiffProblemFirst&lt; Sys, T &gt;::solveInitialEquilibrium</definition>
        <argsstring></argsstring>
        <name>solveInitialEquilibrium</name>
        <briefdescription>
<para>default TRUE </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="122" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a3ee527ff67206a05f894b8ddbcdba141" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lmx::DiffProblemFirst&lt; Sys, T &gt;::b_convergence</definition>
        <argsstring></argsstring>
        <name>b_convergence</name>
        <briefdescription>
<para>1 if external convergence function is set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="123" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a3398c81ab17368be1001edad0a426db0" prot="private" static="no" mutable="no">
        <type><ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref>&lt; <ref refid="classlmx_1_1DiffProblemFirst" kindref="compound">DiffProblemFirst</ref>&lt; Sys, T &gt; &gt;</type>
        <definition>NLSolver&lt; DiffProblemFirst&lt;Sys, T&gt; &gt; lmx::DiffProblemFirst&lt; Sys, T &gt;::theNLSolver</definition>
        <argsstring></argsstring>
        <name>theNLSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="124" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a2b4bcfa167539fb6b574a7310d553b4c" prot="private" static="no" mutable="no">
        <type>void(Sys::*</type>
        <definition>void(Sys::*  lmx::DiffProblemFirst&lt; Sys, T &gt;::stepTriggered)()</definition>
        <argsstring>)()</argsstring>
        <name>stepTriggered</name>
        <briefdescription>
<para>function called at the end of each time step </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="125" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1ae57b7838dfbc2a8cab768e37ebcc423e" prot="private" static="no" mutable="no">
        <type>void(Sys::*</type>
        <definition>void(Sys::*  lmx::DiffProblemFirst&lt; Sys, T &gt;::res)(lmx::Vector&lt; T &gt; &amp;residue, const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time)</definition>
        <argsstring>)(lmx::Vector&lt; T &gt; &amp;residue, const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time)</argsstring>
        <name>res</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="126" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a1812736b42c70acb7b073246542138eb" prot="private" static="no" mutable="no">
        <type>void(Sys::*</type>
        <definition>void(Sys::*  lmx::DiffProblemFirst&lt; Sys, T &gt;::jac)(lmx::Matrix&lt; T &gt; &amp;tangent, const lmx::Vector&lt; T &gt; &amp;q, double partial_qdot, double time)</definition>
        <argsstring>)(lmx::Matrix&lt; T &gt; &amp;tangent, const lmx::Vector&lt; T &gt; &amp;q, double partial_qdot, double time)</argsstring>
        <name>jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="131" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1a318bdfa3044c9b60af5a0a136bf2110a" prot="private" static="no" mutable="no">
        <type>void(Sys::*</type>
        <definition>void(Sys::*  lmx::DiffProblemFirst&lt; Sys, T &gt;::eval)(const lmx::Vector&lt; T &gt; &amp;q, lmx::Vector&lt; T &gt; &amp;qdot, double time)</definition>
        <argsstring>)(const lmx::Vector&lt; T &gt; &amp;q, lmx::Vector&lt; T &gt; &amp;qdot, double time)</argsstring>
        <name>eval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="136" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlmx_1_1DiffProblemFirst_1acce2d23f9f1d082a76c2297cbadd0d94" prot="private" static="no" mutable="no">
        <type>bool(Sys::*</type>
        <definition>bool(Sys::*  lmx::DiffProblemFirst&lt; Sys, T &gt;::conv)(const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time)</definition>
        <argsstring>)(const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time)</argsstring>
        <name>conv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="140" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1aaf0fde08317bd8971b7459ef16849608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lmx::DiffProblemFirst&lt; Sys, T &gt;::DiffProblemFirst</definition>
        <argsstring>()</argsstring>
        <name>DiffProblemFirst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="62" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1adaaf9fbfa61386b0cb8b4663d59a8730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lmx::DiffProblemFirst&lt; Sys, T &gt;::~DiffProblemFirst</definition>
        <argsstring>()</argsstring>
        <name>~DiffProblemFirst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="68" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="68" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1ae53840b52a86da742f8876c3ce9d84e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setResidue</definition>
        <argsstring>(void(Sys::*residue_in)(lmx::Vector&lt; T &gt; &amp;residue, const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time))</argsstring>
        <name>setResidue</name>
        <param>
          <type>void(Sys::*)(<ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;residue, const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;q, const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;qdot, double time)</type>
          <declname>residue_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the external function for residue evaluation. Must be a Sys member function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>residue_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Residue function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="71" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1ad92bfc9ce19b1d9dde21174b8293ee87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setJacobian</definition>
        <argsstring>(void(Sys::*jacobian_in)(lmx::Matrix&lt; T &gt; &amp;tangent, const lmx::Vector&lt; T &gt; &amp;q, double partial_qdot, double time))</argsstring>
        <name>setJacobian</name>
        <param>
          <type>void(Sys::*)(<ref refid="classlmx_1_1Matrix" kindref="compound">lmx::Matrix</ref>&lt; T &gt; &amp;tangent, const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;q, double partial_qdot, double time)</type>
          <declname>jacobian_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the external function for tangent to q. Must be a Sys member function. :::change documentation::: <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobian_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Tangent function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="77" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="174" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a89d10f2e411120f28b018373dc71cabd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setEvaluation</definition>
        <argsstring>(void(Sys::*eval_in)(const lmx::Vector&lt; T &gt; &amp;q, lmx::Vector&lt; T &gt; &amp;qdot, double time))</argsstring>
        <name>setEvaluation</name>
        <param>
          <type>void(Sys::*)(const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;q, <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;qdot, double time)</type>
          <declname>eval_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the external (first order configuration) evaluation function. Must be a Sys member function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eval_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The acceleration function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="83" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="190" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1ab27dd5720adba4e053df6466475f26c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setConvergence</definition>
        <argsstring>(double eps_in)</argsstring>
        <name>setConvergence</name>
        <param>
          <type>double</type>
          <declname>eps_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backward resolution of mother function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L2</parametername>
</parameternamelist>
<parameterdescription>
<para>norm maximum residual. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="92" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="92" bodyend="93"/>
        <references refid="classlmx_1_1DiffProblem_1aa85b140d95fb966f444845fcb02c5b8d" compoundref="lmx__diff__problem_8h" startline="104" endline="104">lmx::DiffProblem&lt; Sys, T &gt;::setConvergence</references>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a385369f5042104f942a424c265cd0e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setConvergence</definition>
        <argsstring>(bool(Sys::*convergence)(const lmx::Vector&lt; T &gt; &amp;q, const lmx::Vector&lt; T &gt; &amp;qdot, double time))</argsstring>
        <name>setConvergence</name>
        <param>
          <type>bool(Sys::*)(const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;q, const <ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;qdot, double time)</type>
          <declname>convergence</declname>
          <defname>conv_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the external function that implements a different convergence criteria from those available in LMX. Must be a Sys member function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conv_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The convergence evaluation function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="95" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="207" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a511df5ff67cf74cf91889c0f0583f611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::setStepTriggered</definition>
        <argsstring>(void(Sys::*stepTriggered_in)())</argsstring>
        <name>setStepTriggered</name>
        <param>
          <type>void(Sys::*)()</type>
          <declname>stepTriggered_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines a function call between time steps. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="103" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a535b9ed53d511d0cce05279e19505e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::iterationResidue</definition>
        <argsstring>(lmx::Vector&lt; T &gt; &amp;residue, lmx::Vector&lt; T &gt; &amp;q_current)</argsstring>
        <name>iterationResidue</name>
        <param>
          <type><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;</type>
          <declname>residue</declname>
        </param>
        <param>
          <type><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;</type>
          <declname>q_current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref> residue computation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>residue</parametername>
</parameternamelist>
<parameterdescription>
<para>Residue vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q_current</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration</ref> computed by the <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="105" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="237" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a41a1e8c20fd4ef8aff4202f895be8b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::iterationJacobian</definition>
        <argsstring>(lmx::Matrix&lt; T &gt; &amp;jacobian, lmx::Vector&lt; T &gt; &amp;q_current)</argsstring>
        <name>iterationJacobian</name>
        <param>
          <type><ref refid="classlmx_1_1Matrix" kindref="compound">lmx::Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>jacobian</declname>
        </param>
        <param>
          <type><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;</type>
          <declname>q_current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref> jacobian computation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>Tangent matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q_current</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration</ref> computed by the <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="107" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1afa938181b5a6cfeee0b9584ae22f1756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lmx::DiffProblemFirst&lt; Sys, T &gt;::iterationConvergence</definition>
        <argsstring>(lmx::Vector&lt; T &gt; &amp;q_current)</argsstring>
        <name>iterationConvergence</name>
        <param>
          <type><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector</ref>&lt; T &gt; &amp;</type>
          <declname>q_current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref> convergence evaluation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_current</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration</ref> computed by the <ref refid="classlmx_1_1NLSolver" kindref="compound">NLSolver</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="109" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="269" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1ac08b98b65d0eabe6ab28536fa5ab14f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="classlmx_1_1DiffProblem_1a63b0e232de28374afb9bb3b1389f689a">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize solving function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="111" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="282" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a9f49697369b6d27dc281b17626ddcd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::solve</definition>
        <argsstring>()</argsstring>
        <name>solve</name>
        <reimplements refid="classlmx_1_1DiffProblem_1a287dc44a62a249feb8855bd10098ecac">solve</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solve main function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="113" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="310" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a95a3a5d4f23d727859f20f58b9f345ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::stepSolve</definition>
        <argsstring>()</argsstring>
        <name>stepSolve</name>
        <reimplements refid="classlmx_1_1DiffProblem_1a81e9c22909edbe06b00210c6b2caac58">stepSolve</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solve only one step </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="115" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="322" bodyend="327"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a410cd80ec85f443292747949a836467f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::stepSolveExplicit</definition>
        <argsstring>()</argsstring>
        <name>stepSolveExplicit</name>
        <reimplements refid="classlmx_1_1DiffProblem_1a903615eaf6680edd0b54ff33e6552544">stepSolveExplicit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Explicit time scheme solver. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="118" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classlmx_1_1DiffProblemFirst_1a3f6b59b5758ede2e188e87bf5ece94a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lmx::DiffProblemFirst&lt; Sys, T &gt;::stepSolveImplicit</definition>
        <argsstring>()</argsstring>
        <name>stepSolveImplicit</name>
        <reimplements refid="classlmx_1_1DiffProblem_1ae9d3c6912932bd555a432a1d003e95dc">stepSolveImplicit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implicit time scheme solver. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="119" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="349" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template class <ref refid="classlmx_1_1DiffProblemFirst" kindref="compound">DiffProblemFirst</ref>. Implementation for First Order ODE system solvers. </para>    </briefdescription>
    <detaileddescription>
<para>This class implements methods for defining and solving initial value problems described by a TotalDiff class&apos; derivided object, and initial conditions in the form <formula id="3">$ q(t_o) = q_o $</formula>.</para><para><simplesect kind="author"><para>Daniel Iglesias . </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="310">
        <label>lmx::DiffProblem&lt; Sys, T &gt;</label>
        <link refid="classlmx_1_1DiffProblem"/>
      </node>
      <node id="309">
        <label>lmx::DiffProblemFirst&lt; Sys, T &gt;</label>
        <link refid="classlmx_1_1DiffProblemFirst"/>
        <childnode refid="310" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="312">
        <label>lmx::DiffProblem&lt; Sys, T &gt;</label>
        <link refid="classlmx_1_1DiffProblem"/>
        <childnode refid="313" relation="usage">
          <edgelabel>theNLSolver</edgelabel>
        </childnode>
      </node>
      <node id="311">
        <label>lmx::DiffProblemFirst&lt; Sys, T &gt;</label>
        <link refid="classlmx_1_1DiffProblemFirst"/>
        <childnode refid="312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="313">
        <label>lmx::NLSolver&lt; T &gt;</label>
        <link refid="classlmx_1_1NLSolver"/>
      </node>
    </collaborationgraph>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" line="57" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_first.h" bodystart="56" bodyend="145"/>
    <listofallmembers>
      <member refid="classlmx_1_1DiffProblem_1a456e836c8dd468f6b02def753d14218a" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>advance</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a3ee527ff67206a05f894b8ddbcdba141" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>b_convergence</name></member>
      <member refid="classlmx_1_1DiffProblem_1a3ef615eb960335f2ce95598d3860af07" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>b_steptriggered</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1acce2d23f9f1d082a76c2297cbadd0d94" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>conv</name></member>
      <member refid="classlmx_1_1DiffProblem_1a33d21e901331098181a7403e22694058" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>DiffProblem</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1aaf0fde08317bd8971b7459ef16849608" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>DiffProblemFirst</name></member>
      <member refid="classlmx_1_1DiffProblem_1aeb9570709f636d15d2636cbe5d6a8f5b" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>epsilon</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a318bdfa3044c9b60af5a0a136bf2110a" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>eval</name></member>
      <member refid="classlmx_1_1DiffProblem_1aed830db025433747c8190c8a77db75d5" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>fileOutMap</name></member>
      <member refid="classlmx_1_1DiffProblem_1a30189df0b3fb21bb133ae3f8605960ed" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>getConfiguration</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1ac08b98b65d0eabe6ab28536fa5ab14f7" prot="public" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>initialize</name></member>
      <member refid="classlmx_1_1DiffProblem_1a75a92da3686aa6b8807ad68eb79a86ea" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>isIntegratorExplicit</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1afa938181b5a6cfeee0b9584ae22f1756" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>iterationConvergence</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a41a1e8c20fd4ef8aff4202f895be8b51" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>iterationJacobian</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a535b9ed53d511d0cce05279e19505e3f" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>iterationResidue</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a1812736b42c70acb7b073246542138eb" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>jac</name></member>
      <member refid="classlmx_1_1DiffProblem_1a219c62e356b88d5e2680a476f1c3f427" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>p_delta_q</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1ae57b7838dfbc2a8cab768e37ebcc423e" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>res</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1ab27dd5720adba4e053df6466475f26c6" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setConvergence</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a385369f5042104f942a424c265cd0e48" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setConvergence</name></member>
      <member refid="classlmx_1_1DiffProblem_1a044719996388c68d07b0296f5097c83c" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setDiffSystem</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a89d10f2e411120f28b018373dc71cabd" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setEvaluation</name></member>
      <member refid="classlmx_1_1DiffProblem_1a61dcb7fdf68cdd5a93a1c756d5fbbba2" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setInitialConfiguration</name></member>
      <member refid="classlmx_1_1DiffProblem_1a6dbf90e487205bbeeeb2a9537ff1df11" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setInitialConfiguration</name></member>
      <member refid="classlmx_1_1DiffProblem_1a668f2d36f68d2bf4a7047ab371cc3613" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setIntegrator</name></member>
      <member refid="classlmx_1_1DiffProblem_1aaa04d6f928a27a6c8ff4d7afee9d845a" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setIntegrator</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1ad92bfc9ce19b1d9dde21174b8293ee87" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setJacobian</name></member>
      <member refid="classlmx_1_1DiffProblem_1a0cc21d6f547367b41e2292db9ea9d3a3" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setOutputFile</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1ae53840b52a86da742f8876c3ce9d84e5" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setResidue</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a511df5ff67cf74cf91889c0f0583f611" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setStepTriggered</name></member>
      <member refid="classlmx_1_1DiffProblem_1aaef515c456107dc7c3def7efb69df1fe" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setTimeParameters</name></member>
      <member refid="classlmx_1_1DiffProblem_1a0a3a2b2a3439c317381ab2248113b6e5" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>setVervosity</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a9f49697369b6d27dc281b17626ddcd54" prot="public" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>solve</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a8d8a73819c76dcfd52042522dc55dbd4" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>solveInitialEquilibrium</name></member>
      <member refid="classlmx_1_1DiffProblem_1a618e5cd5bfc0fcdf581688a19f6d8f8f" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>stepSize</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a95a3a5d4f23d727859f20f58b9f345ba" prot="public" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>stepSolve</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a410cd80ec85f443292747949a836467f" prot="private" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>stepSolveExplicit</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a3f6b59b5758ede2e188e87bf5ece94a4" prot="private" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>stepSolveImplicit</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a2b4bcfa167539fb6b574a7310d553b4c" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>stepTriggered</name></member>
      <member refid="classlmx_1_1DiffProblem_1a6b58fb60128a6c764f641d8c3fa27bf2" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>tf</name></member>
      <member refid="classlmx_1_1DiffProblem_1a714d81c35c9c8648817dcd58f78d7f66" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>theConfiguration</name></member>
      <member refid="classlmx_1_1DiffProblem_1a5dceac9c803cae5b920048f40f9b889e" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>theIntegrator</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1a3398c81ab17368be1001edad0a426db0" prot="private" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>theNLSolver</name></member>
      <member refid="classlmx_1_1DiffProblem_1a9f5d3e07c69d65267b57c42b412705f6" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>theSystem</name></member>
      <member refid="classlmx_1_1DiffProblem_1a760ffa595e70cae2531f3216aac6c46e" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>to</name></member>
      <member refid="classlmx_1_1DiffProblem_1a9c30436b4fe89c4da9ceb9194191a6b0" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>vervosity</name></member>
      <member refid="classlmx_1_1DiffProblem_1a14bc11e5167b425f1a94de4d73c934ec" prot="protected" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>writeStepFiles</name></member>
      <member refid="classlmx_1_1DiffProblem_1a80661c86ad22e8ee27bae92859f6dd91" prot="public" virt="virtual"><scope>lmx::DiffProblemFirst</scope><name>~DiffProblem</name></member>
      <member refid="classlmx_1_1DiffProblemFirst_1adaaf9fbfa61386b0cb8b4663d59a8730" prot="public" virt="non-virtual"><scope>lmx::DiffProblemFirst</scope><name>~DiffProblemFirst</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
