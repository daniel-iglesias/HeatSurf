<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classcofe_1_1TensorRank2" kind="class" prot="public">
    <compoundname>cofe::TensorRank2</compoundname>
    <derivedcompoundref refid="classcofe_1_1TensorRank2Sym" prot="public" virt="non-virtual">cofe::TensorRank2Sym&lt; Dim, T &gt;</derivedcompoundref>
    <includes refid="cofe__TensorRank1_8h" local="no">/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank1.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>Dim</declname>
        <defname>Dim</defname>
      </param>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" prot="public" static="no">
        <type>T</type>
        <definition>typedef T cofe::TensorRank2&lt; Dim, T &gt;::scalar_type</definition>
        <argsstring></argsstring>
        <name>scalar_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="27" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" prot="public" static="no">
        <type><ref refid="classcofe_1_1TensorRank1" kindref="compound">cofe::TensorRank1</ref>&lt; Dim, T &gt;</type>
        <definition>typedef cofe::TensorRank1&lt;Dim,T&gt; cofe::TensorRank2&lt; Dim, T &gt;::vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="28" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" prot="public" static="no">
        <type><ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2</ref>&lt; Dim, T &gt;</type>
        <definition>typedef cofe::TensorRank2&lt;Dim,T&gt; cofe::TensorRank2&lt; Dim, T &gt;::tensor_type</definition>
        <argsstring></argsstring>
        <name>tensor_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="29" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" prot="public" static="no">
        <type><ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2</ref>&lt; Dim, T &gt;</type>
        <definition>typedef cofe::TensorRank2&lt;Dim,T&gt; cofe::TensorRank2&lt; Dim, T &gt;::own_type</definition>
        <argsstring></argsstring>
        <name>own_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="30" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcofe_1_1TensorRank2_1ae3f28ba9fd3ccd7afe9c5976b6e5178b" prot="public" static="no">
        <type><ref refid="classcofe_1_1AbstractTensorRank4SS" kindref="compound">cofe::AbstractTensorRank4SS</ref>&lt; Dim, T &gt;</type>
        <definition>typedef cofe::AbstractTensorRank4SS&lt;Dim, T&gt; cofe::TensorRank2&lt; Dim, T &gt;::ar4tensor_type</definition>
        <argsstring></argsstring>
        <name>ar4tensor_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="31" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcofe_1_1TensorRank2_1a08e40e4ff7ed027f27ae8669ae3f5908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TensorRank1&lt; Dim, T &gt;</definition>
        <argsstring></argsstring>
        <name>TensorRank1&lt; Dim, T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="513" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classcofe_1_1TensorRank2_1a94728a8371137490602713c44f6d3e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" kindref="member">own_type</ref></type>
        <definition>own_type operator*</definition>
        <argsstring>(const own_type &amp;T1, const own_type &amp;T2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" kindref="member">own_type</ref> &amp;</type>
          <declname>T1</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" kindref="member">own_type</ref> &amp;</type>
          <declname>T2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="108" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="108" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" prot="protected" static="no" mutable="no">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
        <definition>scalar_type cofe::TensorRank2&lt; Dim, T &gt;::com[Dim][Dim]</definition>
        <argsstring>[Dim][Dim]</argsstring>
        <name>com</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="119" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="119" bodyend="-1"/>
        <referencedby refid="classcofe_1_1TensorRank2_1a3edc1495fa6318c924d122b43ae35296" compoundref="cofe__TensorRank2_8h" startline="349" endline="360">cofe::TensorRank2&lt; Dim, T &gt;::beProductOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a50e2406d1358dd9c4a1d95aba6cd7375" compoundref="cofe__TensorRank2_8h" startline="379" endline="390">cofe::TensorRank2&lt; Dim, T &gt;::beProductTraOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a1c33be3b42add56b28659f985aa965bf" compoundref="cofe__TensorRank2Sym_8h" startline="55" endline="61">cofe::TensorRank2Sym&lt; Dim, T &gt;::beSymmetricPartOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a7f8161e73cdc617cfcdb37335090e300" compoundref="cofe__TensorRank2Sym_8h" startline="81" endline="89">cofe::TensorRank2Sym&lt; Dim, T &gt;::beSymProductOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1adeb45423a4fcf114cee11c399fe23326" compoundref="cofe__TensorRank2_8h" startline="323" endline="326">cofe::TensorRank2&lt; Dim, T &gt;::beTransposeOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1afc7fa48bc56f6a2784481758e16761c2" compoundref="cofe__TensorRank2_8h" startline="364" endline="375">cofe::TensorRank2&lt; Dim, T &gt;::beTraProductOf</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a838b74665c17b6d60d9e342ff05d4420" compoundref="cofe__TensorRank2Sym_8h" startline="91" endline="97">cofe::TensorRank2Sym&lt; Dim, T &gt;::checkSymmetry</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1aabfa3c3f2045a08766dc774625410e34" compoundref="cofe__TensorRank2Sym_8h" startline="181" endline="197">cofe::TensorRank2Sym&lt; Dim, T &gt;::computeMaxPrincipalDirection</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1af21522a579144b568613c850c6856ce1" compoundref="cofe__TensorRank2_8h" startline="301" endline="308">cofe::TensorRank2&lt; Dim, T &gt;::dot</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1ab39e8b2dbb0866f8a861e42129895256" compoundref="cofe__TensorRank2_8h" startline="103" endline="105">cofe::TensorRank2&lt; Dim, T &gt;::operator T</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a87093b92ee8219d1aeb7bfae06035a71" compoundref="cofe__TensorRank2_8h" startline="88" endline="94">cofe::TensorRank2&lt; Dim, T &gt;::operator!=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a328a64fd8f4f688ad9689c94d815f985" compoundref="cofe__TensorRank2_8h" startline="96" endline="101">cofe::TensorRank2&lt; Dim, T &gt;::operator*=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1ae48aa87bd29405aad324ec5d3e593b26" compoundref="cofe__TensorRank2_8h" startline="283" endline="288">cofe::TensorRank2&lt; Dim, T &gt;::operator+=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a87cadb5aaf319212f4948516c0152e61" compoundref="cofe__TensorRank2_8h" startline="292" endline="297">cofe::TensorRank2&lt; Dim, T &gt;::operator-=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a67244381f61e945177a82d50954fcb9c" compoundref="cofe__TensorRank2_8h" startline="255" endline="261">cofe::TensorRank2&lt; Dim, T &gt;::operator=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a529b71c78891ef9a00c6d2515c812d5c" compoundref="cofe__TensorRank2Sym_8h" startline="50" endline="54">cofe::TensorRank2Sym&lt; Dim, T &gt;::operator=</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1ae34c4793ec388270b417d717a1624efd" compoundref="cofe__TensorRank2_8h" startline="80" endline="86">cofe::TensorRank2&lt; Dim, T &gt;::operator==</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1af28aac212a14afce9e6e0554234cf3bb" compoundref="cofe__TensorRank2_8h" startline="429" endline="438">cofe::TensorRank2&lt; Dim, T &gt;::solve</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2_1a5c10f45abc4b4c34016e0af1d54a565d" compoundref="cofe__TensorRank2_8h" startline="168" endline="171">cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</referencedby>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a47b1dc72944a7061e2a4b5648ad70949" compoundref="cofe__TensorRank2Sym_8h" startline="45" endline="46">cofe::TensorRank2Sym&lt; Dim, T &gt;::TensorRank2Sym</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a224848030ac161c4962376c189450a42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>()</argsstring>
        <name>TensorRank2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="33" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ac7cdeb09ca5cf60fb0ecf9c2ad72ff0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const T ptr[Dim][Dim])</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const T</type>
          <declname>ptr</declname>
          <array>[Dim][Dim]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="34" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1adb070405bdf51413255ebd736516cfb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const T &amp;aValue)</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const T &amp;</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="35" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a63a8348ee7fea2cec9345d0474e1b577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const std::string &amp;stringOfComponents)</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>stringOfComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="36" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a405b0de39bca1744a285fb08cf189228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const char *c_stringOfComponents)</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const char *</type>
          <declname>c_stringOfComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="37" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a5c10f45abc4b4c34016e0af1d54a565d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const own_type &amp;aTen)</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" kindref="member">own_type</ref> &amp;</type>
          <declname>aTen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="38" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="168" bodyend="171"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1aea3bdfe6a4751a76c034e4fc350ddae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::~TensorRank2</definition>
        <argsstring>()</argsstring>
        <name>~TensorRank2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="39" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a191fa7ce4804287b6496066a5df2a799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cofe::TensorRank2&lt; Dim, T &gt;::initializeFrom</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>initializeFrom</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="40" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a91c568920d4b5f5f9f6f8bdafab7bc95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cofe::TensorRank2&lt; Dim, T &gt;::initializeFrom</definition>
        <argsstring>(std::istream &amp;istre)</argsstring>
        <name>initializeFrom</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>istre</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="41" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a56346adecab6c8e74def3fb980eea29e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int cofe::TensorRank2&lt; Dim, T &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="42" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a70ce7c8bfbe7e4bfd396d10bcfa1f99b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref> &amp;</type>
        <definition>T &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="43" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a4d33fccaf8405418f327fbeaa578eac1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref> &amp;</type>
        <definition>const T &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator()</definition>
        <argsstring>(int i, int j) const </argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="44" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a3f6357e9fb217490cd9d959887163328" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
        <definition>T cofe::TensorRank2&lt; Dim, T &gt;::trace</definition>
        <argsstring>() const </argsstring>
        <name>trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="45" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="219" bodyend="224"/>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1ab17bf08ed2d08a17877b0616dea15ad0" compoundref="cofe__TensorRank2Sym_8h" startline="63" endline="67">cofe::TensorRank2Sym&lt; Dim, T &gt;::beHydrostaticPartOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a974de1ac866a442b71c7585f93d7b700" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
        <definition>TensorRank2&lt; Dim, T &gt; &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator=</definition>
        <argsstring>(const T &amp;aValue)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="46" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="228" bodyend="234"/>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1a3ada6adac59a547889a8404cc3bc7c39" compoundref="cofe__TensorRank2Sym_8h" startline="49" endline="49">cofe::TensorRank2Sym&lt; Dim, T &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1aa13f3b43175c50377dc7be1b3b4ba0e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
        <definition>TensorRank2&lt; Dim, T &gt; &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator=</definition>
        <argsstring>(const std::string &amp;stringOfComponents)</argsstring>
        <name>operator=</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>stringOfComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="47" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a06e9b0f1029f40caef19846aac685229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
        <definition>TensorRank2&lt; Dim, T &gt; &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator=</definition>
        <argsstring>(const char *c_stringOfComponents)</argsstring>
        <name>operator=</name>
        <param>
          <type>const char *</type>
          <declname>c_stringOfComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="48" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a67244381f61e945177a82d50954fcb9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
        <definition>TensorRank2&lt; Dim, T &gt; &amp; cofe::TensorRank2&lt; Dim, T &gt;::operator=</definition>
        <argsstring>(const tensor_type &amp;aTen)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>aTen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="49" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="255" bodyend="261"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a7f85e87ad4469c630444074f245bfe85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="50" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="265" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a4fd70229db0582dbefb468643e67edd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::operator*=</definition>
        <argsstring>(const scalar_type aValue)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="51" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="274" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ae48aa87bd29405aad324ec5d3e593b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::operator+=</definition>
        <argsstring>(const TensorRank2&lt; Dim, T &gt; a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2" kindref="compound">TensorRank2</ref>&lt; Dim, T &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="52" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="283" bodyend="288"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a87cadb5aaf319212f4948516c0152e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::operator-=</definition>
        <argsstring>(const TensorRank2&lt; Dim, T &gt; a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2" kindref="compound">TensorRank2</ref>&lt; Dim, T &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="53" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="292" bodyend="297"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1af21522a579144b568613c850c6856ce1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
        <definition>T cofe::TensorRank2&lt; Dim, T &gt;::dot</definition>
        <argsstring>(const tensor_type &amp;aTensor) const </argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>aTensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="54" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="301" bodyend="308"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1aa0f9fe988669a1b2234e1c4ad631c4c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::operateOn</definition>
        <argsstring>(const vector_type &amp;operand, vector_type &amp;answer) const </argsstring>
        <name>operateOn</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>operand</declname>
        </param>
        <param>
          <type><ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="55" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="312" bodyend="319"/>
        <references refid="classcofe_1_1TensorRank1_1abdb5cad4f516b76641384b815b2c6c66" compoundref="cofe__TensorRank1_8h" startline="60">cofe::TensorRank1&lt; Dim, T &gt;::com</references>
        <referencedby refid="classcofe_1_1TensorRank1_1a55c60b81097f43aa6274288d77f17d7c" compoundref="cofe__TensorRank1_8h" startline="231" endline="235">cofe::TensorRank1&lt; Dim, T &gt;::beProductOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1adeb45423a4fcf114cee11c399fe23326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beTransposeOf</definition>
        <argsstring>(const tensor_type &amp;Ten)</argsstring>
        <name>beTransposeOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>Ten</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="56" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="323" bodyend="326"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
        <referencedby refid="cofe__fmc_8h_1ae0820f3fd53d650ec71607d0254a70de" compoundref="cofe__fmc_8h" startline="123" endline="128">transposeOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a323eb1ab146ace337487ebc240a6fcc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beProductOf</definition>
        <argsstring>(const vector_type &amp;leftVec, const ar4tensor_type &amp;r4T, const vector_type &amp;rightVec)</argsstring>
        <name>beProductOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>leftVec</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1ae3f28ba9fd3ccd7afe9c5976b6e5178b" kindref="member">ar4tensor_type</ref> &amp;</type>
          <declname>r4T</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>rightVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="57" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="329" bodyend="334"/>
        <referencedby refid="cofe__fmc_8h_1a57b3646ec2df7b1be0ecfe1698b18cb0" compoundref="cofe__fmc_8h" startline="115" endline="120">operator*</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a570391f93730b60cd57cb05fdda5df29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beProductOf</definition>
        <argsstring>(const vector_type &amp;leftVec, const vector_type &amp;rightVec)</argsstring>
        <name>beProductOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>leftVec</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>rightVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="60" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="338" bodyend="345"/>
        <references refid="classcofe_1_1TensorRank1_1abdb5cad4f516b76641384b815b2c6c66" compoundref="cofe__TensorRank1_8h" startline="60">cofe::TensorRank1&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a3edc1495fa6318c924d122b43ae35296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beProductOf</definition>
        <argsstring>(const tensor_type &amp;leftTen, const tensor_type &amp;rightTen)</argsstring>
        <name>beProductOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>leftTen</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>rightTen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="62" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="349" bodyend="360"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1afc7fa48bc56f6a2784481758e16761c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beTraProductOf</definition>
        <argsstring>(const tensor_type &amp;leftTen, const tensor_type &amp;rightTen)</argsstring>
        <name>beTraProductOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>leftTen</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>rightTen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="64" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="364" bodyend="375"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a50e2406d1358dd9c4a1d95aba6cd7375" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beProductTraOf</definition>
        <argsstring>(const tensor_type &amp;leftTen, const tensor_type &amp;rightTen)</argsstring>
        <name>beProductTraOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>leftTen</declname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>rightTen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="66" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="379" bodyend="390"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ae57410d40bcb8f8b0fabe31acc478ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beUnityTensor</definition>
        <argsstring>()</argsstring>
        <name>beUnityTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="68" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="396" bodyend="400"/>
        <referencedby refid="classcofe_1_1TensorRank2Sym_1ab17bf08ed2d08a17877b0616dea15ad0" compoundref="cofe__TensorRank2Sym_8h" startline="63" endline="67">cofe::TensorRank2Sym&lt; Dim, T &gt;::beHydrostaticPartOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1af28aac212a14afce9e6e0554234cf3bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::solve</definition>
        <argsstring>(const vector_type &amp;operand, vector_type &amp;answer) const </argsstring>
        <name>solve</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>operand</declname>
        </param>
        <param>
          <type><ref refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" kindref="member">vector_type</ref> &amp;</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="69" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="429" bodyend="438"/>
        <references refid="classcofe_1_1TensorRank1_1abdb5cad4f516b76641384b815b2c6c66" compoundref="cofe__TensorRank1_8h" startline="60">cofe::TensorRank1&lt; Dim, T &gt;::com</references>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
        <references refid="namespacecofe_1a5d5b0de16aea3255de1d90d382190948" compoundref="cofe__gausselim_8h" startline="18" endline="44">cofe::gausselim</references>
        <referencedby refid="classcofe_1_1TensorRank1_1add29081e2d5bcf9db8234944643211cc" compoundref="cofe__TensorRank1_8h" startline="240" endline="244">cofe::TensorRank1&lt; Dim, T &gt;::beSolutionOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a5bb4a7f811368240ecf93ff89da64fb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::beInverseOf</definition>
        <argsstring>(const tensor_type &amp;atensor)</argsstring>
        <name>beInverseOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" kindref="member">tensor_type</ref> &amp;</type>
          <declname>atensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="71" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="452" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a6201d2f1f6491c789bfb77a914ee7354" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
        <definition>T cofe::TensorRank2&lt; Dim, T &gt;::determinant</definition>
        <argsstring>() const </argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="72" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="404" bodyend="408"/>
        <referencedby refid="classcofe_1_1TensorRank2_1a287c066e522677f57aa945d99455abbf" compoundref="cofe__TensorRank2_8h" startline="469" endline="489">cofe::TensorRank2&lt; Dim, T &gt;::beInverseOf</referencedby>
        <referencedby refid="cofe__fmc_8h_1a98538bed05cd28f9a29f7c74cbbd0aaf" compoundref="cofe__fmc_8h" startline="141" endline="163">inverseOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a043df152939c4a51e9804b56395736c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" kindref="member">scalar_type</ref></type>
        <definition>T cofe::TensorRank2&lt; Dim, T &gt;::secondInvariant</definition>
        <argsstring>() const </argsstring>
        <name>secondInvariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="73" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="493" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ac44f4cc0b8489564a74cb3544677bc51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::TensorRank2</definition>
        <argsstring>(const int &amp;aValue)</argsstring>
        <name>TensorRank2</name>
        <param>
          <type>const int &amp;</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="77" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ad139dabcd7509b655c11c06b453e4e46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; cofe::TensorRank2&lt; Dim, T &gt;::print_row</definition>
        <argsstring>(std::ostream &amp;, const cofe::TensorRank2&lt; Dim, T &gt; &amp;, int) const </argsstring>
        <name>print_row</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2</ref>&lt; Dim, T &gt; &amp;</type>
          <defname>a</defname>
        </param>
        <param>
          <type>int</type>
          <defname>row</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="78" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="513" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ae34c4793ec388270b417d717a1624efd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cofe::TensorRank2&lt; Dim, T &gt;::operator==</definition>
        <argsstring>(const T &amp;aValue) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="80" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="80" bodyend="86"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a87093b92ee8219d1aeb7bfae06035a71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cofe::TensorRank2&lt; Dim, T &gt;::operator!=</definition>
        <argsstring>(const T &amp;aValue) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const T &amp;</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="88" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="88" bodyend="94"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a328a64fd8f4f688ad9689c94d815f985" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; Dim, T &gt;::operator*=</definition>
        <argsstring>(const own_type aTensor)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" kindref="member">own_type</ref></type>
          <declname>aTensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="96" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="96" bodyend="101"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ab39e8b2dbb0866f8a861e42129895256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cofe::TensorRank2&lt; Dim, T &gt;::operator T</definition>
        <argsstring>()</argsstring>
        <name>operator T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="103" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="103" bodyend="105"/>
        <references refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" compoundref="cofe__TensorRank2_8h" startline="119">cofe::TensorRank2&lt; Dim, T &gt;::com</references>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1aefe719d34b9be7ae253816fac48e6638" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double cofe::TensorRank2&lt; 2, double &gt;::determinant</definition>
        <argsstring>() const</argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="412" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a76949c747b16d53913a508e16ac14cbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double cofe::TensorRank2&lt; 3, double &gt;::determinant</definition>
        <argsstring>() const</argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="419" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="419" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1ac44ed3575539ab2a418407db1ecba9be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; 2, double &gt;::solve</definition>
        <argsstring>(const cofe::TensorRank1&lt; 2, double &gt; &amp;rh, cofe::TensorRank1&lt; 2, double &gt; &amp;lh) const</argsstring>
        <name>solve</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank1" kindref="compound">cofe::TensorRank1</ref>&lt; 2, double &gt; &amp;</type>
          <declname>rh</declname>
        </param>
        <param>
          <type><ref refid="classcofe_1_1TensorRank1" kindref="compound">cofe::TensorRank1</ref>&lt; 2, double &gt; &amp;</type>
          <declname>lh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="442" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="442" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a695bdbb2f78d143642bd79bf07a6a770" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; 2, double &gt;::beInverseOf</definition>
        <argsstring>(const cofe::TensorRank2&lt; 2, double &gt; &amp;aT)</argsstring>
        <name>beInverseOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2</ref>&lt; 2, double &gt; &amp;</type>
          <declname>aT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="457" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="457" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classcofe_1_1TensorRank2_1a287c066e522677f57aa945d99455abbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cofe::TensorRank2&lt; 3, double &gt;::beInverseOf</definition>
        <argsstring>(const cofe::TensorRank2&lt; 3, double &gt; &amp;T)</argsstring>
        <name>beInverseOf</name>
        <param>
          <type>const <ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2</ref>&lt; 3, double &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" line="469" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2.h" bodystart="469" bodyend="489"/>
        <references refid="classcofe_1_1TensorRank2_1a6201d2f1f6491c789bfb77a914ee7354" compoundref="cofe__TensorRank2_8h" startline="404" endline="408">cofe::TensorRank2&lt; Dim, T &gt;::determinant</references>
        <references refid="classcofe_1_1CofeUtils_1a580314f9895cd59dca7803dfd1afd687" compoundref="cofe__CofeUtils_8h" startline="32" endline="37">cofe::CofeUtils::error</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="442">
        <label>cofe::TensorRank2Sym&lt; Dim, T &gt;</label>
        <link refid="classcofe_1_1TensorRank2Sym"/>
        <childnode refid="441" relation="public-inheritance">
        </childnode>
      </node>
      <node id="441">
        <label>cofe::TensorRank2&lt; Dim, T &gt;</label>
        <link refid="classcofe_1_1TensorRank2"/>
      </node>
    </inheritancegraph>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank1.h" line="19" column="1" bodyfile="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank1.h" bodystart="19" bodyend="-1"/>
    <listofallmembers>
      <member refid="classcofe_1_1TensorRank2_1ae3f28ba9fd3ccd7afe9c5976b6e5178b" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>ar4tensor_type</name></member>
      <member refid="classcofe_1_1TensorRank2_1a5bb4a7f811368240ecf93ff89da64fb7" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beInverseOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a695bdbb2f78d143642bd79bf07a6a770" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beInverseOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a287c066e522677f57aa945d99455abbf" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beInverseOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a323eb1ab146ace337487ebc240a6fcc1" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beProductOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a570391f93730b60cd57cb05fdda5df29" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beProductOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a3edc1495fa6318c924d122b43ae35296" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beProductOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1a50e2406d1358dd9c4a1d95aba6cd7375" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beProductTraOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1adeb45423a4fcf114cee11c399fe23326" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beTransposeOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1afc7fa48bc56f6a2784481758e16761c2" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beTraProductOf</name></member>
      <member refid="classcofe_1_1TensorRank2_1ae57410d40bcb8f8b0fabe31acc478ad2" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>beUnityTensor</name></member>
      <member refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" prot="protected" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>com</name></member>
      <member refid="classcofe_1_1TensorRank2_1a6201d2f1f6491c789bfb77a914ee7354" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>determinant</name></member>
      <member refid="classcofe_1_1TensorRank2_1aefe719d34b9be7ae253816fac48e6638" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>determinant</name></member>
      <member refid="classcofe_1_1TensorRank2_1a76949c747b16d53913a508e16ac14cbd" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>determinant</name></member>
      <member refid="classcofe_1_1TensorRank2_1af21522a579144b568613c850c6856ce1" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>dot</name></member>
      <member refid="classcofe_1_1TensorRank2_1a191fa7ce4804287b6496066a5df2a799" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>initializeFrom</name></member>
      <member refid="classcofe_1_1TensorRank2_1a91c568920d4b5f5f9f6f8bdafab7bc95" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>initializeFrom</name></member>
      <member refid="classcofe_1_1TensorRank2_1aa0f9fe988669a1b2234e1c4ad631c4c4" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operateOn</name></member>
      <member refid="classcofe_1_1TensorRank2_1ab39e8b2dbb0866f8a861e42129895256" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator T</name></member>
      <member refid="classcofe_1_1TensorRank2_1a87093b92ee8219d1aeb7bfae06035a71" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator!=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a70ce7c8bfbe7e4bfd396d10bcfa1f99b" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator()</name></member>
      <member refid="classcofe_1_1TensorRank2_1a4d33fccaf8405418f327fbeaa578eac1" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator()</name></member>
      <member refid="classcofe_1_1TensorRank2_1a94728a8371137490602713c44f6d3e52" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator*</name></member>
      <member refid="classcofe_1_1TensorRank2_1a4fd70229db0582dbefb468643e67edd5" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator*=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a328a64fd8f4f688ad9689c94d815f985" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator*=</name></member>
      <member refid="classcofe_1_1TensorRank2_1ae48aa87bd29405aad324ec5d3e593b26" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator+=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a87cadb5aaf319212f4948516c0152e61" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator-=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a974de1ac866a442b71c7585f93d7b700" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator=</name></member>
      <member refid="classcofe_1_1TensorRank2_1aa13f3b43175c50377dc7be1b3b4ba0e1" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a06e9b0f1029f40caef19846aac685229" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator=</name></member>
      <member refid="classcofe_1_1TensorRank2_1a67244381f61e945177a82d50954fcb9c" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator=</name></member>
      <member refid="classcofe_1_1TensorRank2_1ae34c4793ec388270b417d717a1624efd" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>operator==</name></member>
      <member refid="classcofe_1_1TensorRank2_1afef4f2c69f8a804d795c334bc382dc5f" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>own_type</name></member>
      <member refid="classcofe_1_1TensorRank2_1ad139dabcd7509b655c11c06b453e4e46" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>print_row</name></member>
      <member refid="classcofe_1_1TensorRank2_1a3dce726b0c34912c6549a5911f478eaf" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>scalar_type</name></member>
      <member refid="classcofe_1_1TensorRank2_1a043df152939c4a51e9804b56395736c0" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>secondInvariant</name></member>
      <member refid="classcofe_1_1TensorRank2_1a56346adecab6c8e74def3fb980eea29e" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>size</name></member>
      <member refid="classcofe_1_1TensorRank2_1af28aac212a14afce9e6e0554234cf3bb" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>solve</name></member>
      <member refid="classcofe_1_1TensorRank2_1ac44ed3575539ab2a418407db1ecba9be" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>solve</name></member>
      <member refid="classcofe_1_1TensorRank2_1a3af9468088af4836c93808edaceb03b0" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>tensor_type</name></member>
      <member refid="classcofe_1_1TensorRank2_1a08e40e4ff7ed027f27ae8669ae3f5908" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank1&lt; Dim, T &gt;</name></member>
      <member refid="classcofe_1_1TensorRank2_1a224848030ac161c4962376c189450a42" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1ac7cdeb09ca5cf60fb0ecf9c2ad72ff0e" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1adb070405bdf51413255ebd736516cfb8" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1a63a8348ee7fea2cec9345d0474e1b577" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1a405b0de39bca1744a285fb08cf189228" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1a5c10f45abc4b4c34016e0af1d54a565d" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1ac44f4cc0b8489564a74cb3544677bc51" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>TensorRank2</name></member>
      <member refid="classcofe_1_1TensorRank2_1a3f6357e9fb217490cd9d959887163328" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>trace</name></member>
      <member refid="classcofe_1_1TensorRank2_1a5c3ced2bb8f6574ba2ce2e1dab9d2c0b" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>vector_type</name></member>
      <member refid="classcofe_1_1TensorRank2_1a7f85e87ad4469c630444074f245bfe85" prot="public" virt="non-virtual"><scope>cofe::TensorRank2</scope><name>zero</name></member>
      <member refid="classcofe_1_1TensorRank2_1aea3bdfe6a4751a76c034e4fc350ddae4" prot="public" virt="virtual"><scope>cofe::TensorRank2</scope><name>~TensorRank2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
