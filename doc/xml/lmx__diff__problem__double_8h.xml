<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="lmx__diff__problem__double_8h" kind="file">
    <compoundname>lmx_diff_problem_double.h</compoundname>
    <includes local="no">map</includes>
    <includes refid="lmx__nlsolvers__double_8h" local="yes">lmx_nlsolvers_double.h</includes>
    <includes refid="lmx__diff__configuration_8h" local="yes">lmx_diff_configuration.h</includes>
    <includes refid="lmx__diff__integrator__ab_8h" local="yes">lmx_diff_integrator_ab.h</includes>
    <includes refid="lmx__diff__integrator__am_8h" local="yes">lmx_diff_integrator_am.h</includes>
    <includes refid="lmx__diff__integrator__bdf_8h" local="yes">lmx_diff_integrator_bdf.h</includes>
    <includes refid="lmx__diff__integrator__centraldiff_8h" local="yes">lmx_diff_integrator_centraldiff.h</includes>
    <includedby refid="lmx__diff__problem__first__second_8h" local="yes">src/LMX/lmx_diff_problem_first_second.h</includedby>
    <incdepgraph>
      <node id="3763">
        <label>src/LMX/lmx_diff_problem_double.h</label>
        <link refid="lmx_diff_problem_double.h"/>
        <childnode refid="3764" relation="include">
        </childnode>
        <childnode refid="3765" relation="include">
        </childnode>
        <childnode refid="3767" relation="include">
        </childnode>
        <childnode refid="3775" relation="include">
        </childnode>
        <childnode refid="3777" relation="include">
        </childnode>
        <childnode refid="3780" relation="include">
        </childnode>
        <childnode refid="3781" relation="include">
        </childnode>
      </node>
      <node id="3775">
        <label>lmx_diff_integrator_ab.h</label>
        <link refid="lmx__diff__integrator__ab_8h"/>
        <childnode refid="3776" relation="include">
        </childnode>
      </node>
      <node id="3776">
        <label>lmx_diff_integrator_base.h</label>
        <link refid="lmx__diff__integrator__base_8h"/>
        <childnode refid="3767" relation="include">
        </childnode>
      </node>
      <node id="3778">
        <label>cmath</label>
      </node>
      <node id="3770">
        <label>stdexcept</label>
      </node>
      <node id="3771">
        <label>string</label>
      </node>
      <node id="3781">
        <label>lmx_diff_integrator_centraldiff.h</label>
        <link refid="lmx__diff__integrator__centraldiff_8h"/>
        <childnode refid="3776" relation="include">
        </childnode>
      </node>
      <node id="3764">
        <label>map</label>
      </node>
      <node id="3769">
        <label>exception</label>
      </node>
      <node id="3777">
        <label>lmx_diff_integrator_am.h</label>
        <link refid="lmx__diff__integrator__am_8h"/>
        <childnode refid="3778" relation="include">
        </childnode>
        <childnode refid="3779" relation="include">
        </childnode>
      </node>
      <node id="3767">
        <label>lmx_diff_configuration.h</label>
        <link refid="lmx__diff__configuration_8h"/>
        <childnode refid="3768" relation="include">
        </childnode>
        <childnode refid="3774" relation="include">
        </childnode>
      </node>
      <node id="3768">
        <label>lmx_except.h</label>
        <link refid="lmx__except_8h"/>
        <childnode refid="3766" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3770" relation="include">
        </childnode>
        <childnode refid="3771" relation="include">
        </childnode>
        <childnode refid="3772" relation="include">
        </childnode>
        <childnode refid="3773" relation="include">
        </childnode>
      </node>
      <node id="3779">
        <label>lmx_diff_integrator_base_implicit.h</label>
        <link refid="lmx__diff__integrator__base__implicit_8h"/>
        <childnode refid="3776" relation="include">
        </childnode>
      </node>
      <node id="3772">
        <label>sstream</label>
      </node>
      <node id="3780">
        <label>lmx_diff_integrator_bdf.h</label>
        <link refid="lmx__diff__integrator__bdf_8h"/>
        <childnode refid="3778" relation="include">
        </childnode>
        <childnode refid="3779" relation="include">
        </childnode>
      </node>
      <node id="3766">
        <label>iostream</label>
      </node>
      <node id="3765">
        <label>lmx_nlsolvers_double.h</label>
        <link refid="lmx__nlsolvers__double_8h"/>
        <childnode refid="3766" relation="include">
        </childnode>
      </node>
      <node id="3773">
        <label>algorithm</label>
      </node>
      <node id="3774">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3782">
        <label>src/LMX/lmx_diff_problem_double.h</label>
        <link refid="lmx_diff_problem_double.h"/>
        <childnode refid="3783" relation="include">
        </childnode>
      </node>
      <node id="3783">
        <label>src/LMX/lmx_diff_problem_first_second.h</label>
        <link refid="lmx__diff__problem__first__second_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlmx_1_1DiffProblemDouble" prot="public">lmx::DiffProblemDouble</innerclass>
    <innernamespace refid="namespacelmx">lmx</innernamespace>
    <briefdescription>
<para>DiffProblemDouble class implementation. </para>    </briefdescription>
    <detaileddescription>
<para>Describes a virtual class for a partitioned dynamic system with an ODE or DAE description.</para><para>This is the base file of lmx_diff systems&apos; manipulation and solution.</para><para><simplesect kind="author"><para>Daniel Iglesias </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2005<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/lmx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LMXDIFF_PROBLEM_DOUBLE_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LMXDIFF_PROBLEM_DOUBLE_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"></codeline>
<codeline lineno="38"><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include&quot;<ref refid="lmx__nlsolvers__double_8h" kindref="compound">lmx_nlsolvers_double.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lmx__diff__configuration_8h" kindref="compound">lmx_diff_configuration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lmx__diff__integrator__ab_8h" kindref="compound">lmx_diff_integrator_ab.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lmx__diff__integrator__am_8h" kindref="compound">lmx_diff_integrator_am.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lmx__diff__integrator__bdf_8h" kindref="compound">lmx_diff_integrator_bdf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lmx__diff__integrator__centraldiff_8h" kindref="compound">lmx_diff_integrator_centraldiff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lmx<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T=</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="59" refid="classlmx_1_1DiffProblemDouble" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlmx_1_1DiffProblemDouble" kindref="compound">DiffProblemDouble</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classlmx_1_1DiffProblemDouble_1ae8c3d384622ae1fa70c2a47afac70862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae8c3d384622ae1fa70c2a47afac70862" kindref="member">DiffProblemDouble</ref>()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlmx_1_1DiffProblemDouble_1aec50fd5565c52bcb97854648d8b7090b" kindref="member">theNLSolver</ref>(0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae53777e808b169b5d9974e4e1b5ae88c" kindref="member">theConfiguration1</ref>(0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac19d79f3e7b88a12467a7822e33ca7ab" kindref="member">theConfiguration2</ref>(0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ab280b17787513f600649850f9a343aa6" kindref="member">theIntegrator1</ref>(0)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a64e25c04214254252b8750599f779b78" kindref="member">theIntegrator2</ref>(0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ad53a4d138b69f0e7c0c9c758f736002c" kindref="member">theSystem</ref>(0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ad460462bffa8b3425e0e2df46d6bcf63" kindref="member">p_delta_q1</ref>(0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a0f6147b1376247d0fc18327da7946401" kindref="member">p_delta_q2</ref>(0)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classlmx_1_1DiffProblemDouble_1aa9f4750227ae6f96a9d8f11627083e8d" kindref="member">b_steptriggered</ref>(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classlmx_1_1DiffProblemDouble_1adbb22b63b9fb8a836cffe43d56acc18e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1adbb22b63b9fb8a836cffe43d56acc18e" kindref="member">~DiffProblemDouble</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classlmx_1_1DiffProblemDouble_1a6637a9ec5c42651860b86fc647629ec9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a6637a9ec5c42651860b86fc647629ec9" kindref="member">setDiffSystem</ref>(Sys&amp;<sp/>system_in)<sp/>{<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ad53a4d138b69f0e7c0c9c758f736002c" kindref="member">theSystem</ref><sp/>=<sp/>&amp;system_in;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a9d8e6aed840c0e58abec933593ed711f" kindref="member">setIntegrator1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt1<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3f04c4bdd5053f4cd1d42d86fa62b9f9" kindref="member">setIntegrator2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt1<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a9d8e6aed840c0e58abec933593ed711f" kindref="member">setIntegrator1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3f04c4bdd5053f4cd1d42d86fa62b9f9" kindref="member">setIntegrator2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3904b3ac77d965496dbfa34bd40710a9" kindref="member">setInitialConfiguration1</ref>(<ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>q_o);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1aeb674ac0fae825ba27739389da86d690" kindref="member">setInitialConfiguration2</ref>(<ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>q_o,<sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>qdot_o);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a335cc81dc14a60c647e1b4cef52aeac9" kindref="member">setOutputFile1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diffOrder);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae34168c45bce6a838d884dbaf505a275" kindref="member">setOutputFile2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diffOrder);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1af30336003f2ae2ff91dc73428ac1f55d" kindref="member">setTimeParameters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tf_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_size_in);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>void<sp/>iterationResidue(<sp/>lmx::Vector&lt;T&gt;&amp;<sp/>residue,<sp/>lmx::Vector&lt;T&gt;&amp;<sp/>q_current<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac3bfab9528535950de450453520a0f86" kindref="member">setStepTriggered</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(Sys::*<sp/>stepTriggered_in)());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>documentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classlmx_1_1DiffProblemDouble_1aab0427d12489cc988638ea87300eaf4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1aab0427d12489cc988638ea87300eaf4e" kindref="member">setConvergence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps_in)<sp/>{<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac53d73fc5d13aacb043c9a49aa8af7a7" kindref="member">epsilon</ref><sp/>=<sp/>eps_in;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>documentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classlmx_1_1DiffProblemDouble_1a4d9b7e2ecdd61a06ab6e7856b91d58fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a4d9b7e2ecdd61a06ab6e7856b91d58fb" kindref="member">getConfiguration1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae53777e808b169b5d9974e4e1b5ae88c" kindref="member">theConfiguration1</ref>-&gt;getConf(order,<sp/>step);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classlmx_1_1DiffProblemDouble_1aa5668ae04aaad91df040becbfe015142" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/><ref refid="classlmx_1_1DiffProblemDouble_1aa5668ae04aaad91df040becbfe015142" kindref="member">getConfiguration2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac19d79f3e7b88a12467a7822e33ca7ab" kindref="member">theConfiguration2</ref>-&gt;getConf(order,<sp/>step);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classlmx_1_1DiffProblemDouble_1aae7c53702d881cf815429d9cdee40147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1aae7c53702d881cf815429d9cdee40147" kindref="member">isIntegratorExplicit</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlmx_1_1DiffProblemDouble_1ab280b17787513f600649850f9a343aa6" kindref="member">theIntegrator1</ref><sp/>&amp;&amp;<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a64e25c04214254252b8750599f779b78" kindref="member">theIntegrator2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classlmx_1_1DiffProblemDouble_1ab280b17787513f600649850f9a343aa6" kindref="member">theIntegrator1</ref>-&gt;isExplicit()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this-&gt;<ref refid="classlmx_1_1DiffProblemDouble_1a64e25c04214254252b8750599f779b78" kindref="member">theIntegrator2</ref>-&gt;isExplicit()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a2f15d38c3ca50be92314584b99f5f31b" kindref="member">initialize</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a901247dbeb3ed310bc1c4a79359c8ba2" kindref="member">stepSolve</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a9e0c8b706f755e2c142b1c031883307b" kindref="member">solve</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ab99b7e0b862abe5ba37719499dddbf55" kindref="member">writeStepFiles</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stepSolveExplicit()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stepSolveImplicit()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="classlmx_1_1DiffProblemDouble_1aec50fd5565c52bcb97854648d8b7090b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1NLSolverDouble" kindref="compound">lmx::NLSolverDouble&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1aec50fd5565c52bcb97854648d8b7090b" kindref="member">theNLSolver</ref>;<sp/></highlight></codeline>
<codeline lineno="142" refid="classlmx_1_1DiffProblemDouble_1ae53777e808b169b5d9974e4e1b5ae88c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1Configuration" kindref="compound">lmx::Configuration&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae53777e808b169b5d9974e4e1b5ae88c" kindref="member">theConfiguration1</ref>;<sp/></highlight></codeline>
<codeline lineno="143" refid="classlmx_1_1DiffProblemDouble_1ac19d79f3e7b88a12467a7822e33ca7ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1Configuration" kindref="compound">lmx::Configuration&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac19d79f3e7b88a12467a7822e33ca7ab" kindref="member">theConfiguration2</ref>;<sp/></highlight></codeline>
<codeline lineno="144" refid="classlmx_1_1DiffProblemDouble_1ab280b17787513f600649850f9a343aa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1IntegratorBase" kindref="compound">lmx::IntegratorBase&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ab280b17787513f600649850f9a343aa6" kindref="member">theIntegrator1</ref>;<sp/></highlight></codeline>
<codeline lineno="145" refid="classlmx_1_1DiffProblemDouble_1a64e25c04214254252b8750599f779b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1IntegratorBase" kindref="compound">lmx::IntegratorBase&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a64e25c04214254252b8750599f779b78" kindref="member">theIntegrator2</ref>;<sp/></highlight></codeline>
<codeline lineno="146" refid="classlmx_1_1DiffProblemDouble_1ad53a4d138b69f0e7c0c9c758f736002c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys<sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ad53a4d138b69f0e7c0c9c758f736002c" kindref="member">theSystem</ref>;<sp/></highlight></codeline>
<codeline lineno="147" refid="classlmx_1_1DiffProblemDouble_1ad460462bffa8b3425e0e2df46d6bcf63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1ad460462bffa8b3425e0e2df46d6bcf63" kindref="member">p_delta_q1</ref>;<sp/></highlight></codeline>
<codeline lineno="148" refid="classlmx_1_1DiffProblemDouble_1a0f6147b1376247d0fc18327da7946401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref><sp/>*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a0f6147b1376247d0fc18327da7946401" kindref="member">p_delta_q2</ref>;<sp/></highlight></codeline>
<codeline lineno="149" refid="classlmx_1_1DiffProblemDouble_1aa9f4750227ae6f96a9d8f11627083e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1aa9f4750227ae6f96a9d8f11627083e8d" kindref="member">b_steptriggered</ref>;<sp/></highlight></codeline>
<codeline lineno="150" refid="classlmx_1_1DiffProblemDouble_1a19b2a71c676c67ee71de28fde7c97d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a19b2a71c676c67ee71de28fde7c97d54" kindref="member">to</ref>;<sp/></highlight></codeline>
<codeline lineno="151" refid="classlmx_1_1DiffProblemDouble_1a48be1fc2aba0df868106372d5e31e2ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a48be1fc2aba0df868106372d5e31e2ad" kindref="member">tf</ref>;<sp/></highlight></codeline>
<codeline lineno="152" refid="classlmx_1_1DiffProblemDouble_1a65a47b229f04c1de32d33af03dd8b448" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a65a47b229f04c1de32d33af03dd8b448" kindref="member">stepSize</ref>;<sp/></highlight></codeline>
<codeline lineno="153" refid="classlmx_1_1DiffProblemDouble_1ac53d73fc5d13aacb043c9a49aa8af7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac53d73fc5d13aacb043c9a49aa8af7a7" kindref="member">epsilon</ref>;<sp/></highlight></codeline>
<codeline lineno="154" refid="classlmx_1_1DiffProblemDouble_1aa26e0b530cc5b78b32383515a7932a97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::ofstream<sp/>*&gt;<sp/><ref refid="classlmx_1_1DiffProblemDouble_1aa26e0b530cc5b78b32383515a7932a97" kindref="member">fileOutMap1</ref>;<sp/></highlight></codeline>
<codeline lineno="155" refid="classlmx_1_1DiffProblemDouble_1a17946e26033b4dc383b37756b39097a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::ofstream<sp/>*&gt;<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a17946e26033b4dc383b37756b39097a5" kindref="member">fileOutMap2</ref>;<sp/></highlight></codeline>
<codeline lineno="156" refid="classlmx_1_1DiffProblemDouble_1a86019217395c38514e7765294dc55ac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(Sys::*<sp/><ref refid="classlmx_1_1DiffProblemDouble_1a86019217395c38514e7765294dc55ac8" kindref="member">stepTriggered</ref>)();<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"></codeline>
<codeline lineno="168"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="169" refid="classlmx_1_1DiffProblemDouble_1a9d8e6aed840c0e58abec933593ed711f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a9d8e6aed840c0e58abec933593ed711f" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setIntegrator1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>0<sp/>-&gt;<sp/>Adams-Bashford</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>1<sp/>-&gt;<sp/>Adams-Moulton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>2<sp/>-&gt;<sp/>BDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>2<sp/>-&gt;<sp/>BDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorCentralDifference" kindref="compound">IntegratorCentralDifference&lt;T&gt;</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="197" refid="classlmx_1_1DiffProblemDouble_1a3f04c4bdd5053f4cd1d42d86fa62b9f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3f04c4bdd5053f4cd1d42d86fa62b9f9" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setIntegrator2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>0<sp/>-&gt;<sp/>Adams-Bashford</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>1<sp/>-&gt;<sp/>Adams-Moulton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>2<sp/>-&gt;<sp/>BDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(opt1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3<sp/>:<sp/></highlight><highlight class="comment">//<sp/>integrator<sp/>==<sp/>2<sp/>-&gt;<sp/>BDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorCentralDifference" kindref="compound">IntegratorCentralDifference&lt;T&gt;</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="224" refid="classlmx_1_1DiffProblemDouble_1ab74169307a19b84de9eacbf2f72cc969" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a9d8e6aed840c0e58abec933593ed711f" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setIntegrator1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;CD&quot;</highlight><highlight class="normal">))<sp/>theIntegrator1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorCentralDifference" kindref="compound">IntegratorCentralDifference&lt;T&gt;</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="265" refid="classlmx_1_1DiffProblemDouble_1a06bcb3ca3b14dd1d43a56876df5be2f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3f04c4bdd5053f4cd1d42d86fa62b9f9" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setIntegrator2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt2)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AB-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAB" kindref="compound">IntegratorAB&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;AM-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorAM" kindref="compound">IntegratorAM&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(1);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(2);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(3);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-4&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(4);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;BDF-5&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorBDF" kindref="compound">IntegratorBDF&lt;T&gt;</ref>(5);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type,<sp/></highlight><highlight class="stringliteral">&quot;CD&quot;</highlight><highlight class="normal">))<sp/>theIntegrator2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1IntegratorCentralDifference" kindref="compound">IntegratorCentralDifference&lt;T&gt;</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="305" refid="classlmx_1_1DiffProblemDouble_1a3904b3ac77d965496dbfa34bd40710a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a3904b3ac77d965496dbfa34bd40710a9" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setInitialConfiguration1</ref>(<ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>q_o)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theConfiguration1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theConfiguration1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>theConfiguration1-&gt;<ref refid="classlmx_1_1Configuration_1af437ee887381048646611a1b7c79c80e" kindref="member">setInitialCondition</ref>(0,<sp/>q_o);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="321" refid="classlmx_1_1DiffProblemDouble_1aeb674ac0fae825ba27739389da86d690" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1aeb674ac0fae825ba27739389da86d690" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setInitialConfiguration2</ref>(<ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>q_o,<sp/><ref refid="classlmx_1_1Vector" kindref="compound">lmx::Vector&lt;T&gt;</ref>&amp;<sp/>qdot_o)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theConfiguration2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theConfiguration2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1Configuration" kindref="compound">Configuration&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>theConfiguration2-&gt;<ref refid="classlmx_1_1Configuration_1af437ee887381048646611a1b7c79c80e" kindref="member">setInitialCondition</ref>(0,<sp/>q_o);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>theConfiguration2-&gt;setInitialCondition(1,<sp/>qdot_o);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>theConfiguration2-&gt;quiet();</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="341" refid="classlmx_1_1DiffProblemDouble_1a335cc81dc14a60c647e1b4cef52aeac9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1a335cc81dc14a60c647e1b4cef52aeac9" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setOutputFile1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diffOrder)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fileOutMap1[diffOrder]<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Changing<sp/>opened<sp/>file<sp/>for<sp/>diff<sp/>order<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>diffOrder<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>New<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOutMap1[diffOrder]-&gt;open(filename);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOutMap1[diffOrder]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(filename);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="360" refid="classlmx_1_1DiffProblemDouble_1ae34168c45bce6a838d884dbaf505a275" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ae34168c45bce6a838d884dbaf505a275" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setOutputFile2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diffOrder)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fileOutMap2[diffOrder]<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Changing<sp/>opened<sp/>file<sp/>for<sp/>diff<sp/>order<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>diffOrder<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>New<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOutMap2[diffOrder]-&gt;open(filename);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOutMap2[diffOrder]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(filename);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="381" refid="classlmx_1_1DiffProblemDouble_1af30336003f2ae2ff91dc73428ac1f55d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1af30336003f2ae2ff91dc73428ac1f55d" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setTimeParameters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tf_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_size_in)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;to<sp/>=<sp/>to_in;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tf<sp/>=<sp/>tf_in;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stepSize<sp/>=<sp/>step_size_in;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="392" refid="classlmx_1_1DiffProblemDouble_1ab99b7e0b862abe5ba37719499dddbf55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ab99b7e0b862abe5ba37719499dddbf55" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::writeStepFiles</ref>()</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::ofstream<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>fileOutMap1.begin();<sp/>it<sp/>!=<sp/>fileOutMap1.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;setf(std::ios::scientific,<sp/>std::ios::floatfield);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;precision(6);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>theConfiguration1-&gt;getTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>theConfiguration1-&gt;getConf(it-&gt;first,<sp/>0).size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>theConfiguration1-&gt;getConf(it-&gt;first,<sp/>0).readElement(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>fileOutMap2.begin();<sp/>it<sp/>!=<sp/>fileOutMap2.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;setf(std::ios::scientific,<sp/>std::ios::floatfield);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;precision(6);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>theConfiguration2-&gt;getTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>theConfiguration2-&gt;getConf(it-&gt;first,<sp/>0).size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>theConfiguration2-&gt;getConf(it-&gt;first,<sp/>0).readElement(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(it-&gt;second)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sys,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="420" refid="classlmx_1_1DiffProblemDouble_1ac3bfab9528535950de450453520a0f86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlmx_1_1DiffProblemDouble_1ac3bfab9528535950de450453520a0f86" kindref="member">DiffProblemDouble&lt;Sys, T&gt;::setStepTriggered</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(Sys::*<sp/>stepTriggered_in)())</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stepTriggered<sp/>=<sp/>stepTriggered_in;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>b_steptriggered<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lmx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/lmx_diff_problem_double.h"/>
  </compounddef>
</doxygen>
