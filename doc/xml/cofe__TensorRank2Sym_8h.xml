<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="cofe__TensorRank2Sym_8h" kind="file">
    <compoundname>cofe_TensorRank2Sym.h</compoundname>
    <includes refid="cofe__TensorRank1_8h" local="yes">cofe_TensorRank1.h</includes>
    <includes refid="cofe__TensorRank2_8h" local="yes">cofe_TensorRank2.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cassert</includes>
    <includes refid="cofe__jpjacobi_8h" local="yes">cofe_jpjacobi.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="cofe__fmc_8h" local="yes">src/LMX/cofe_fmc.h</includedby>
    <incdepgraph>
      <node id="3420">
        <label>limits</label>
      </node>
      <node id="3409">
        <label>src/LMX/cofe_TensorRank2Sym.h</label>
        <link refid="cofe_TensorRank2Sym.h"/>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3413" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
      </node>
      <node id="3417">
        <label>cmath</label>
      </node>
      <node id="3422">
        <label>cassert</label>
      </node>
      <node id="3414">
        <label>cofe_gausselim.h</label>
        <link refid="cofe__gausselim_8h"/>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3416" relation="include">
        </childnode>
      </node>
      <node id="3413">
        <label>cofe_TensorRank2.h</label>
        <link refid="cofe__TensorRank2_8h"/>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3420" relation="include">
        </childnode>
      </node>
      <node id="3418">
        <label>string</label>
      </node>
      <node id="3411">
        <label>ostream</label>
      </node>
      <node id="3410">
        <label>cofe_TensorRank1.h</label>
        <link refid="cofe__TensorRank1_8h"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
      </node>
      <node id="3423">
        <label>cofe_jpjacobi.h</label>
        <link refid="cofe__jpjacobi_8h"/>
        <childnode refid="3416" relation="include">
        </childnode>
      </node>
      <node id="3412">
        <label>sstream</label>
      </node>
      <node id="3419">
        <label>cstdlib</label>
      </node>
      <node id="3415">
        <label>iostream</label>
      </node>
      <node id="3416">
        <label>cofe_CofeUtils.h</label>
        <link refid="cofe__CofeUtils_8h"/>
        <childnode refid="3417" relation="include">
        </childnode>
        <childnode refid="3418" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3419" relation="include">
        </childnode>
      </node>
      <node id="3421">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3436">
        <label>src/cone2.cpp</label>
        <link refid="cone2_8cpp"/>
      </node>
      <node id="3424">
        <label>src/LMX/cofe_TensorRank2Sym.h</label>
        <link refid="cofe_TensorRank2Sym.h"/>
        <childnode refid="3425" relation="include">
        </childnode>
      </node>
      <node id="3444">
        <label>src/ring.h</label>
        <link refid="ring_8h"/>
        <childnode refid="3445" relation="include">
        </childnode>
      </node>
      <node id="3425">
        <label>src/LMX/cofe_fmc.h</label>
        <link refid="cofe__fmc_8h"/>
        <childnode refid="3426" relation="include">
        </childnode>
      </node>
      <node id="3438">
        <label>src/cylinder.cpp</label>
        <link refid="cylinder_8cpp"/>
      </node>
      <node id="3439">
        <label>src/geometry.cpp</label>
        <link refid="geometry_8cpp"/>
      </node>
      <node id="3433">
        <label>src/simulation.cpp</label>
        <link refid="simulation_8cpp"/>
      </node>
      <node id="3426">
        <label>src/LMX/lmx.h</label>
        <link refid="lmx_8h"/>
        <childnode refid="3427" relation="include">
        </childnode>
      </node>
      <node id="3441">
        <label>src/ogive.cpp</label>
        <link refid="ogive_8cpp"/>
      </node>
      <node id="3428">
        <label>src/cone.h</label>
        <link refid="cone_8h"/>
        <childnode refid="3429" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
      </node>
      <node id="3434">
        <label>src/cone2.h</label>
        <link refid="cone2_8h"/>
        <childnode refid="3435" relation="include">
        </childnode>
        <childnode refid="3436" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
      </node>
      <node id="3429">
        <label>src/cone.cpp</label>
        <link refid="cone_8cpp"/>
      </node>
      <node id="3437">
        <label>src/cylinder.h</label>
        <link refid="cylinder_8h"/>
        <childnode refid="3438" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
      </node>
      <node id="3443">
        <label>src/twoplates.cpp</label>
        <link refid="twoplates_8cpp"/>
      </node>
      <node id="3432">
        <label>src/heatsurf.cpp</label>
        <link refid="heatsurf_8cpp"/>
      </node>
      <node id="3440">
        <label>src/ogive.h</label>
        <link refid="ogive_8h"/>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3441" relation="include">
        </childnode>
      </node>
      <node id="3445">
        <label>src/ring.cpp</label>
        <link refid="ring_8cpp"/>
      </node>
      <node id="3435">
        <label>src/cone2-bak.cpp</label>
        <link refid="cone2-bak_8cpp"/>
      </node>
      <node id="3430">
        <label>src/cone2-bak.h</label>
        <link refid="cone2-bak_8h"/>
      </node>
      <node id="3427">
        <label>src/geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="3428" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
        <childnode refid="3437" relation="include">
        </childnode>
        <childnode refid="3439" relation="include">
        </childnode>
        <childnode refid="3440" relation="include">
        </childnode>
        <childnode refid="3442" relation="include">
        </childnode>
        <childnode refid="3444" relation="include">
        </childnode>
      </node>
      <node id="3442">
        <label>src/twoplates.h</label>
        <link refid="twoplates_8h"/>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3443" relation="include">
        </childnode>
      </node>
      <node id="3431">
        <label>src/simulation.h</label>
        <link refid="simulation_8h"/>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3433" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcofe_1_1AbstractTensorRank4SS" prot="public">cofe::AbstractTensorRank4SS</innerclass>
    <innerclass refid="classcofe_1_1TensorRank2Sym" prot="public">cofe::TensorRank2Sym</innerclass>
    <innernamespace refid="namespacecofe">cofe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2005<sp/>by<sp/>Jaime<sp/>Planas,<sp/>Jose<sp/>M<sp/>Sancho<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TensorRank2Sym.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Description:<sp/><sp/><sp/><sp/>&lt;describe<sp/>the<sp/>TensorRank2Sym<sp/>class<sp/>here&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TensorRank2Sym_H</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TensorRank2Sym_H</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;MathObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cofe__TensorRank1_8h" kindref="compound">cofe_TensorRank1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cofe__TensorRank2_8h" kindref="compound">cofe_TensorRank2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;MathMatrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cofe__jpjacobi_8h" kindref="compound">cofe_jpjacobi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cofe<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dim,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AbstractTensorRank4SS;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//tengo<sp/>++dudas<sp/>sobre<sp/>la<sp/>implementacin<sp/>+<sp/>conveniente<sp/>para<sp/>el<sp/>tensor<sp/>simtrico</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//he<sp/>optado<sp/>por<sp/>la<sp/>ms<sp/>sencilla:<sp/>guarda<sp/>toda<sp/>la<sp/>matriz<sp/>y<sp/>fuerza<sp/>la<sp/>simetra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dim,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="32" refid="classcofe_1_1TensorRank2Sym" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">TensorRank2Sym</ref>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2" kindref="compound">TensorRank2</ref>&lt;Dim,T&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>cofe::MathMatrix&lt;Dim,Dim,T&gt;<sp/>matrix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>cofe::MathMatrix&lt;(Dim*(Dim+1))/2,1,T&gt;<sp/>stress_likeVector;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="classcofe_1_1TensorRank2Sym_1a5c959003b2f6cd9ece627399bd45835e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a5c959003b2f6cd9ece627399bd45835e" kindref="member">TensorRank2Sym</ref>(){}</highlight></codeline>
<codeline lineno="40" refid="classcofe_1_1TensorRank2Sym_1ad009c20f62a3c7164308ced29b4cca99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1ad009c20f62a3c7164308ced29b4cca99" kindref="member">TensorRank2Sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>ptr[Dim][Dim]):<ref refid="classcofe_1_1TensorRank2" kindref="compound">TensorRank2</ref>&lt;Dim,T&gt;(ptr){assert(<ref refid="classcofe_1_1TensorRank2Sym_1a838b74665c17b6d60d9e342ff05d4420" kindref="member">checkSymmetry</ref>());}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>explicit<sp/>TensorRank2Sym(const<sp/>stress_likeVector<sp/>&amp;<sp/>vec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{for(int<sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>Dim;<sp/>++i)<sp/>for(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Dim;<sp/>++j)<sp/>this-&gt;com[i][j]<sp/>=<sp/>vec(index(i,j));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classcofe_1_1TensorRank2Sym_1a41a6d3b947aa0fe214d4c835df39216e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a41a6d3b947aa0fe214d4c835df39216e" kindref="member">TensorRank2Sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<sp/>aValue)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<ref refid="classcofe_1_1TensorRank2" kindref="compound">TensorRank2</ref>&lt;Dim,T&gt;(aValue){}</highlight></codeline>
<codeline lineno="45" refid="classcofe_1_1TensorRank2Sym_1a47b1dc72944a7061e2a4b5648ad70949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a47b1dc72944a7061e2a4b5648ad70949" kindref="member">TensorRank2Sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">TensorRank2Sym&lt;Dim,T&gt;</ref><sp/>&amp;<sp/>aTen)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Dim;<sp/>++i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Dim;<sp/>++j)<sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j]<sp/>=<sp/>aTen.<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j];}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classcofe_1_1TensorRank2Sym_1aa21acff1313916623564e9eaaca67dbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1aa21acff1313916623564e9eaaca67dbd" kindref="member">~TensorRank2Sym</ref>(){}</highlight></codeline>
<codeline lineno="49" refid="classcofe_1_1TensorRank2Sym_1a3ada6adac59a547889a8404cc3bc7c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a3ada6adac59a547889a8404cc3bc7c39" kindref="member">operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>aValue){<ref refid="classcofe_1_1TensorRank2_1a974de1ac866a442b71c7585f93d7b700" kindref="member">TensorRank2&lt;Dim, T&gt;::operator = </ref>(aValue);}</highlight></codeline>
<codeline lineno="50" refid="classcofe_1_1TensorRank2Sym_1a529b71c78891ef9a00c6d2515c812d5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">TensorRank2Sym&lt;Dim,T&gt;</ref><sp/>&amp;<sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a3ada6adac59a547889a8404cc3bc7c39" kindref="member">operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">TensorRank2Sym&lt;Dim,T&gt;</ref><sp/>&amp;<sp/>aTen)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Dim;<sp/>++i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Dim;<sp/>++j)<sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j]<sp/>=<sp/>aTen.<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="classcofe_1_1TensorRank2Sym_1a1c33be3b42add56b28659f985aa965bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a1c33be3b42add56b28659f985aa965bf" kindref="member">beSymmetricPartOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2" kindref="compound">cofe::TensorRank2&lt;Dim, T&gt;</ref>&amp;<sp/>r2T)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>Dim;<sp/>++i)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Dim;<sp/>++j)<sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j]<sp/>=<sp/>0.5*(r2T(i,j)+r2T(j,i));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classcofe_1_1TensorRank2Sym_1ab17bf08ed2d08a17877b0616dea15ad0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1ab17bf08ed2d08a17877b0616dea15ad0" kindref="member">beHydrostaticPartOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">cofe::TensorRank2Sym&lt;Dim, T&gt;</ref>&amp;<sp/>r2T)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1ae57410d40bcb8f8b0fabe31acc478ad2" kindref="member">beUnityTensor</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)<sp/>*=<sp/>((1.0/3.0)*r2T.<ref refid="classcofe_1_1TensorRank2_1a3f6357e9fb217490cd9d959887163328" kindref="member">trace</ref>());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classcofe_1_1TensorRank2Sym_1a639118d5aa057ab10a57f78855b2dc30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a639118d5aa057ab10a57f78855b2dc30" kindref="member">beDeviatoricPartOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">cofe::TensorRank2Sym&lt;Dim, T&gt;</ref>&amp;<sp/>r2T)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">cofe::TensorRank2Sym&lt;Dim, T&gt;</ref><sp/>aux;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classcofe_1_1TensorRank2Sym_1ab17bf08ed2d08a17877b0616dea15ad0" kindref="member">beHydrostaticPartOf</ref>(r2T);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)<sp/>=<sp/>r2T;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)<sp/>-=<sp/>aux;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classcofe_1_1TensorRank2Sym_1aeb281d2fa552e85b63054784ab9dfb9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1aeb281d2fa552e85b63054784ab9dfb9b" kindref="member">beProductOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1AbstractTensorRank4SS" kindref="compound">cofe::AbstractTensorRank4SS&lt;Dim, T&gt;</ref>&amp;<sp/><sp/>r4T,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">cofe::TensorRank2Sym&lt;Dim, T&gt;</ref>&amp;<sp/>r2ST)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{r4T.operateOn(r2ST,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="classcofe_1_1TensorRank2Sym_1a7f8161e73cdc617cfcdb37335090e300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a7f8161e73cdc617cfcdb37335090e300" kindref="member">beSymProductOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank1" kindref="compound">cofe::TensorRank1&lt;Dim, T&gt;</ref>&amp;<sp/><sp/>lv,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank1" kindref="compound">cofe::TensorRank1&lt;Dim, T&gt;</ref>&amp;<sp/>rv)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Dim;<sp/>++i)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][i]<sp/>=<sp/>lv(i)*rv(i);<sp/></highlight><highlight class="comment">//diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i+1;<sp/>j&lt;<sp/>Dim;++j)<sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j]=this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[j][i]=<sp/>0.5*(lv(i)*rv(j)+lv(j)*rv(i));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="classcofe_1_1TensorRank2Sym_1a838b74665c17b6d60d9e342ff05d4420" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a838b74665c17b6d60d9e342ff05d4420" kindref="member">checkSymmetry</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>Dim;<sp/>++i)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;i;++j)<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[i][j]<sp/>!=<sp/>this-&gt;<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>[j][i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a65bfec60122f7a9481da5600f22ac19e" kindref="member">maxPrincipalValue</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a413471819e725139194b6b9ae14ee69e" kindref="member">computeMaxPrincipalDirection</ref>(<ref refid="classcofe_1_1TensorRank1" kindref="compound">TensorRank1&lt;Dim,T&gt;</ref>&amp;)</highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103" refid="classcofe_1_1TensorRank2Sym_1ab26fa8983ef339411fde00df322a4375" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1ab26fa8983ef339411fde00df322a4375" kindref="member">index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&lt;<sp/>i)<sp/>std::swap(i,j);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i+((j-i)*(2*Dim+1-j+i))/2;}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dim,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classcofe_1_1TensorRank2Sym_1a65bfec60122f7a9481da5600f22ac19e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a65bfec60122f7a9481da5600f22ac19e" kindref="member">TensorRank2Sym&lt;Dim,T&gt;::maxPrincipalValue</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//implementado<sp/>slo<sp/>para<sp/>dimension<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classcofe_1_1TensorRank2Sym_1a254cc6a7bc8ae2997ce4975ba20f965f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a65bfec60122f7a9481da5600f22ac19e" kindref="member">TensorRank2Sym&lt;3,double&gt;::maxPrincipalValue</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I1,<sp/>I2,<sp/>I3,<sp/>aux,<sp/>b,<sp/>c,<sp/>x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>locPI<sp/>=<sp/>4.0*std::atan(1.0);</highlight><highlight class="comment">//convendr�<sp/>meterlo<sp/>en<sp/>un<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/>n,<sp/>t;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>I1<sp/>=<sp/>this-&gt;trace();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>I2<sp/>=<sp/>this-&gt;secondInvariant();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>I3<sp/>=<sp/>this-&gt;determinant();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>I1*I1/3.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>I2-aux;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>I1*(-2.0*aux+3.0*I2)/9.0-I3;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ojo,<sp/>s�o<sp/>calcula<sp/>el<sp/>primer<sp/>autovalor<sp/>(supongo<sp/>que<sp/>es<sp/>el<sp/>mayor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::abs(b)<sp/>&lt;=<sp/>1.0e-9)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-std::pow(c,1.0/3.0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>2.0*std::sqrt(-b/3.0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>3.0*c/(m*b);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>std::atan2(std::sqrt(std::abs(1.0-n*n)),n)/3.0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>m*std::cos(t+2.0*i*locPI/3.0);<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>I1/3.0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classcofe_1_1TensorRank2Sym_1aff828ae4400856cb142f0bb4f822edf4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a65bfec60122f7a9481da5600f22ac19e" kindref="member">TensorRank2Sym&lt;2,double&gt;::maxPrincipalValue</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>this-&gt;trace()*0.5;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0.5*(this-&gt;com[0][0]<sp/>-<sp/>this-&gt;com[1][1]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/><sp/><sp/>=<sp/>this-&gt;com[0][1];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q<sp/><sp/><sp/><sp/><sp/>=<sp/>std::sqrt(d*d+tau*tau);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p<sp/>+<sp/>q;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dim,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classcofe_1_1TensorRank2Sym_1a413471819e725139194b6b9ae14ee69e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a413471819e725139194b6b9ae14ee69e" kindref="member">TensorRank2Sym&lt;Dim,T&gt;::computeMaxPrincipalDirection</ref>(<ref refid="classcofe_1_1TensorRank1" kindref="compound">TensorRank1&lt;Dim,T&gt;</ref>&amp;)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//implementado<sp/>slo<sp/>para<sp/>dimension<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classcofe_1_1TensorRank2Sym_1a0d927eea62fecfcfbe37e74812cbd390" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a413471819e725139194b6b9ae14ee69e" kindref="member">TensorRank2Sym&lt;2,double&gt;::computeMaxPrincipalDirection</ref>(<ref refid="classcofe_1_1TensorRank1" kindref="compound">TensorRank1&lt;2,double&gt;</ref>&amp;<sp/>prdir)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0.5*(this-&gt;com[0][0]<sp/>-<sp/>this-&gt;com[1][1]);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/><sp/><sp/>=<sp/>this-&gt;com[0][1];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>0.5*std::atan2(tau,d);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>prdir(0)<sp/>=<sp/>std::cos(angle);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>prdir(1)<sp/>=<sp/>std::sin(angle);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classcofe_1_1TensorRank2Sym_1aabfa3c3f2045a08766dc774625410e34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcofe_1_1TensorRank2Sym_1a413471819e725139194b6b9ae14ee69e" kindref="member">TensorRank2Sym&lt;3,double&gt;::computeMaxPrincipalDirection</ref>(<ref refid="classcofe_1_1TensorRank1" kindref="compound">TensorRank1&lt;3,double&gt;</ref>&amp;<sp/>prdir)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="182"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="classcofe_1_1TensorRank2Sym" kindref="compound">TensorRank2Sym&lt;3,double&gt;</ref><sp/><sp/>aux;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>(*this);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eiva[3],<sp/>eive[3][3];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrot;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>cofe::jacobi&lt;3,double&gt;(aux.<ref refid="classcofe_1_1TensorRank2_1aa180922c86462cd1ecf2950f9c1ed80e" kindref="member">com</ref>,eiva,eive,nrot);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max=eiva[0];</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>eiva[1]<sp/>&gt;<sp/>eiva[0]<sp/>)<sp/>{max<sp/>=<sp/>eiva[1];<sp/>i=1;}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>eiva[2]<sp/>&gt;<sp/>max<sp/><sp/><sp/><sp/><sp/>)<sp/>{i=2;}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>prdir(0)<sp/>=<sp/>eive[0][i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>prdir(1)<sp/>=<sp/>eive[1][i];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>prdir(2)<sp/>=<sp/>eive[2][i];</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cofe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TensorRank2Sym_H</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/daniel.iglesias/Projects/HeatSurf/src/LMX/cofe_TensorRank2Sym.h"/>
  </compounddef>
</doxygen>
